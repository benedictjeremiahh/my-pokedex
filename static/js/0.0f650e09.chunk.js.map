{"version":3,"sources":["../node_modules/@material-ui/core/esm/SvgIcon/SvgIcon.js","../node_modules/@material-ui/core/esm/utils/createSvgIcon.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js","../node_modules/@material-ui/core/esm/Button/Button.js","../node_modules/graphql/error/syntaxError.mjs","../node_modules/graphql/language/tokenKind.mjs","../node_modules/graphql/language/source.mjs","../node_modules/graphql/language/directiveLocation.mjs","../node_modules/graphql/language/lexer.mjs","../node_modules/graphql/language/parser.mjs","../../src/index.ts","../../../../src/react/parser/index.ts","../../../../src/react/data/OperationData.ts","../../../../src/react/data/QueryData.ts","../../../../../src/react/hooks/utils/useBaseQuery.ts","../../../../../src/react/hooks/utils/useDeepMemo.ts","../../../../../src/react/hooks/utils/useAfterFastRefresh.ts","../../../../src/react/hooks/useQuery.ts"],"names":["SvgIcon","React","props","ref","children","classes","className","_props$color","color","_props$component","component","Component","_props$fontSize","fontSize","htmlColor","titleAccess","_props$viewBox","viewBox","other","_objectWithoutProperties","_extends","clsx","root","concat","capitalize","focusable","undefined","role","muiName","withStyles","theme","userSelect","width","height","display","fill","flexShrink","typography","pxToRem","transition","transitions","create","duration","shorter","colorPrimary","palette","primary","main","colorSecondary","secondary","colorAction","action","active","colorError","error","colorDisabled","disabled","fontSizeInherit","fontSizeSmall","fontSizeLarge","name","createSvgIcon","path","displayName","createElement","memo","forwardRef","_taggedTemplateLiteral","strings","raw","slice","Object","freeze","defineProperties","value","Button","_props$disabled","_props$disableElevati","disableElevation","_props$disableFocusRi","disableFocusRipple","endIconProp","endIcon","focusVisibleClassName","_props$fullWidth","fullWidth","_props$size","size","startIconProp","startIcon","_props$type","type","_props$variant","variant","ButtonBase","colorInherit","focusRipple","focusVisible","label","button","boxSizing","minWidth","padding","borderRadius","shape","text","short","textDecoration","backgroundColor","alpha","hoverOpacity","alignItems","justifyContent","textPrimary","textSecondary","outlined","border","disabledBackground","outlinedPrimary","outlinedSecondary","contained","getContrastText","grey","boxShadow","shadows","A100","containedPrimary","contrastText","dark","containedSecondary","borderColor","textSizeSmall","textSizeLarge","outlinedSizeSmall","outlinedSizeLarge","containedSizeSmall","containedSizeLarge","sizeSmall","sizeLarge","marginRight","marginLeft","iconSizeSmall","iconSizeMedium","iconSizeLarge","syntaxError","source","position","description","GraphQLError","TokenKind","SOF","EOF","BANG","DOLLAR","AMP","PAREN_L","PAREN_R","SPREAD","COLON","EQUALS","AT","BRACKET_L","BRACKET_R","BRACE_L","PIPE","BRACE_R","NAME","INT","FLOAT","STRING","BLOCK_STRING","COMMENT","_defineProperties","target","i","length","descriptor","enumerable","configurable","writable","defineProperty","key","Source","body","arguments","locationOffset","line","column","devAssert","inspect","this","Constructor","protoProps","staticProps","SYMBOL_TO_STRING_TAG","get","prototype","DirectiveLocation","QUERY","MUTATION","SUBSCRIPTION","FIELD","FRAGMENT_DEFINITION","FRAGMENT_SPREAD","INLINE_FRAGMENT","VARIABLE_DEFINITION","SCHEMA","SCALAR","OBJECT","FIELD_DEFINITION","ARGUMENT_DEFINITION","INTERFACE","UNION","ENUM","ENUM_VALUE","INPUT_OBJECT","INPUT_FIELD_DEFINITION","Lexer","startOfFileToken","Token","lastToken","token","lineStart","_proto","advance","lookahead","kind","_token$next","next","readToken","printCharCode","code","isNaN","JSON","stringify","String","fromCharCode","toString","toUpperCase","lexer","prev","bodyLength","pos","end","charCodeAt","_line","_col","readComment","readBlockString","readString","readNumber","readName","unexpectedCharacterMessage","col","start","firstCode","isFloat","readDigits","isNameStart","a","b","c","d","chunkStart","charCode","char2hex","invalidSequence","rawValue","dedentBlockStringValue","Parser","options","sourceObj","instanceOf","isSource","_lexer","_options","parseName","expectToken","Kind","loc","parseDocument","DOCUMENT","definitions","many","parseDefinition","peek","parseOperationDefinition","parseFragmentDefinition","parseTypeSystemDefinition","parseTypeSystemExtension","peekDescription","unexpected","OPERATION_DEFINITION","operation","variableDefinitions","directives","selectionSet","parseSelectionSet","parseOperationType","parseVariableDefinitions","parseDirectives","operationToken","optionalMany","parseVariableDefinition","variable","parseVariable","parseTypeReference","defaultValue","expectOptionalToken","parseValueLiteral","VARIABLE","SELECTION_SET","selections","parseSelection","parseFragment","parseField","alias","nameOrAlias","parseArguments","isConst","item","parseConstArgument","parseArgument","ARGUMENT","hasTypeCondition","expectOptionalKeyword","parseFragmentName","typeCondition","parseNamedType","_this$_options","expectKeyword","experimentalFragmentVariables","parseList","parseObject","parseStringLiteral","BOOLEAN","NULL","block","_this","LIST","values","any","_this2","fields","parseObjectField","OBJECT_FIELD","push","parseDirective","DIRECTIVE","LIST_TYPE","NON_NULL_TYPE","NAMED_TYPE","keywordToken","parseSchemaDefinition","parseScalarTypeDefinition","parseObjectTypeDefinition","parseInterfaceTypeDefinition","parseUnionTypeDefinition","parseEnumTypeDefinition","parseInputObjectTypeDefinition","parseDirectiveDefinition","parseDescription","operationTypes","parseOperationTypeDefinition","SCHEMA_DEFINITION","OPERATION_TYPE_DEFINITION","SCALAR_TYPE_DEFINITION","interfaces","parseImplementsInterfaces","parseFieldsDefinition","OBJECT_TYPE_DEFINITION","_this$_options2","allowLegacySDLImplementsInterfaces","types","delimitedMany","_this$_options3","allowLegacySDLEmptyFields","parseFieldDefinition","args","parseArgumentDefs","parseInputValueDef","INPUT_VALUE_DEFINITION","INTERFACE_TYPE_DEFINITION","parseUnionMemberTypes","UNION_TYPE_DEFINITION","parseEnumValuesDefinition","ENUM_TYPE_DEFINITION","parseEnumValueDefinition","ENUM_VALUE_DEFINITION","parseInputFieldsDefinition","INPUT_OBJECT_TYPE_DEFINITION","parseSchemaExtension","parseScalarTypeExtension","parseObjectTypeExtension","parseInterfaceTypeExtension","parseUnionTypeExtension","parseEnumTypeExtension","parseInputObjectTypeExtension","SCHEMA_EXTENSION","SCALAR_TYPE_EXTENSION","OBJECT_TYPE_EXTENSION","INTERFACE_TYPE_EXTENSION","UNION_TYPE_EXTENSION","ENUM_TYPE_EXTENSION","INPUT_OBJECT_TYPE_EXTENSION","repeatable","locations","parseDirectiveLocations","DIRECTIVE_DEFINITION","parseDirectiveLocation","startToken","_this$_options4","noLocation","Location","getTokenKindDesc","getTokenDesc","atToken","openKind","parseFn","closeKind","nodes","call","delimiterKind","isPunctuatorTokenKind","DocumentType","cache","Map","operationName","Query","Mutation","Subscription","context","onNewData","runLazy","previous","runLazyQuery","cleanup","lazyOptions","obsRefetch","variables","currentObservable","refetch","obsFetchMore","fetchMoreOptions","fetchMore","obsUpdateQuery","mapFn","updateQuery","obsStartPolling","pollInterval","startPolling","obsStopPolling","stopPolling","obsSubscribeToMore","subscribeToMore","execute","refreshClient","getOptions","skip","query","removeQuerySubscription","removeObservable","updateObservableQuery","getExecuteSsrResult","getExecuteResult","executeLazy","loading","networkStatus","ready","called","data","fetchData","ssr","Promise","resolve","startQuerySubscription","afterExecute","lazy","isMounted","ssrInitiated","handleErrorOrCompleted","previousOptions","unmount","bind","result","renderPromises","ssrDisabled","fetchDisabled","client","disableNetworkFetches","ssrLoading","stale","observableQueryFields","addQueryPromise","prepareObservableQueryOptions","verifyDocumentType","fetchPolicy","initializeObservableQuery","getSSRObservable","observableQueryOptions","watchQuery","registerSSRObservable","newObservableQueryOptions","setOptions","catch","currentSubscription","subscribe","previousResult","resubscribeToQuery","hasOwnProperty","last","resetLastResults","currentResult","getCurrentResult","partial","errors","graphQLErrors","assign","getLastResult","keys","previousData","resetQueryStoreErrors","onCompleted","onError","unsubscribe","andDelete","newOptions","storePrevious","isNew","document","cached","fragments","filter","x","queries","mutations","subscriptions","definition","parser","requiredOperationName","usedOperationName","useBaseQuery","tick","forceUpdate","updatedOptions","queryDataRef","queryData","current","then","memoFn","useDeepMemo","queryResult","__DEV__","effectFn","useAfterFastRefresh","useQuery"],"mappings":"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","file":"static/js/0.0f650e09.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@material-ui/utils';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      userSelect: 'none',\n      width: '1em',\n      height: '1em',\n      display: 'inline-block',\n      fill: 'currentColor',\n      flexShrink: 0,\n      fontSize: theme.typography.pxToRem(24),\n      transition: theme.transitions.create('fill', {\n        duration: theme.transitions.duration.shorter\n      })\n    },\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      color: theme.palette.primary.main\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      color: theme.palette.secondary.main\n    },\n\n    /* Styles applied to the root element if `color=\"action\"`. */\n    colorAction: {\n      color: theme.palette.action.active\n    },\n\n    /* Styles applied to the root element if `color=\"error\"`. */\n    colorError: {\n      color: theme.palette.error.main\n    },\n\n    /* Styles applied to the root element if `color=\"disabled\"`. */\n    colorDisabled: {\n      color: theme.palette.action.disabled\n    },\n\n    /* Styles applied to the root element if `fontSize=\"inherit\"`. */\n    fontSizeInherit: {\n      fontSize: 'inherit'\n    },\n\n    /* Styles applied to the root element if `fontSize=\"small\"`. */\n    fontSizeSmall: {\n      fontSize: theme.typography.pxToRem(20)\n    },\n\n    /* Styles applied to the root element if `fontSize=\"large\"`. */\n    fontSizeLarge: {\n      fontSize: theme.typography.pxToRem(35)\n    }\n  };\n};\nvar SvgIcon = /*#__PURE__*/React.forwardRef(function SvgIcon(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'inherit' : _props$color,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'svg' : _props$component,\n      _props$fontSize = props.fontSize,\n      fontSize = _props$fontSize === void 0 ? 'medium' : _props$fontSize,\n      htmlColor = props.htmlColor,\n      titleAccess = props.titleAccess,\n      _props$viewBox = props.viewBox,\n      viewBox = _props$viewBox === void 0 ? '0 0 24 24' : _props$viewBox,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"color\", \"component\", \"fontSize\", \"htmlColor\", \"titleAccess\", \"viewBox\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, color !== 'inherit' && classes[\"color\".concat(capitalize(color))], fontSize !== 'default' && fontSize !== 'medium' && classes[\"fontSize\".concat(capitalize(fontSize))]),\n    focusable: \"false\",\n    viewBox: viewBox,\n    color: htmlColor,\n    \"aria-hidden\": titleAccess ? undefined : true,\n    role: titleAccess ? 'img' : undefined,\n    ref: ref\n  }, other), children, titleAccess ? /*#__PURE__*/React.createElement(\"title\", null, titleAccess) : null);\n});\nprocess.env.NODE_ENV !== \"production\" ? SvgIcon.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Node passed into the SVG element.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   * You can use the `htmlColor` prop to apply a color attribute to the SVG element.\n   */\n  color: PropTypes.oneOf(['action', 'disabled', 'error', 'inherit', 'primary', 'secondary']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * The fontSize applied to the icon. Defaults to 24px, but can be configure to inherit font size.\n   */\n  fontSize: chainPropTypes(PropTypes.oneOf(['default', 'inherit', 'large', 'medium', 'small']), function (props) {\n    var fontSize = props.fontSize;\n\n    if (fontSize === 'default') {\n      throw new Error('Material-UI: `fontSize=\"default\"` is deprecated. Use `fontSize=\"medium\"` instead.');\n    }\n\n    return null;\n  }),\n\n  /**\n   * Applies a color attribute to the SVG element.\n   */\n  htmlColor: PropTypes.string,\n\n  /**\n   * The shape-rendering attribute. The behavior of the different options is described on the\n   * [MDN Web Docs](https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/shape-rendering).\n   * If you are having issues with blurry icons you should investigate this property.\n   */\n  shapeRendering: PropTypes.string,\n\n  /**\n   * Provides a human-readable title for the element that contains it.\n   * https://www.w3.org/TR/SVG-access/#Equivalent\n   */\n  titleAccess: PropTypes.string,\n\n  /**\n   * Allows you to redefine what the coordinates without units mean inside an SVG element.\n   * For example, if the SVG element is 500 (width) by 200 (height),\n   * and you pass viewBox=\"0 0 50 20\",\n   * this means that the coordinates inside the SVG will go from the top left corner (0,0)\n   * to bottom right (50,20) and each unit will be worth 10px.\n   */\n  viewBox: PropTypes.string\n} : void 0;\nSvgIcon.muiName = 'SvgIcon';\nexport default withStyles(styles, {\n  name: 'MuiSvgIcon'\n})(SvgIcon);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport React from 'react';\nimport SvgIcon from '../SvgIcon';\n/**\n * Private module reserved for @material-ui/x packages.\n */\n\nexport default function createSvgIcon(path, displayName) {\n  var Component = function Component(props, ref) {\n    return /*#__PURE__*/React.createElement(SvgIcon, _extends({\n      ref: ref\n    }, props), path);\n  };\n\n  if (process.env.NODE_ENV !== 'production') {\n    // Need to set `displayName` on the inner component for React.memo.\n    // React prior to 16.14 ignores `displayName` on the wrapper.\n    Component.displayName = \"\".concat(displayName, \"Icon\");\n  }\n\n  Component.muiName = SvgIcon.muiName;\n  return /*#__PURE__*/React.memo( /*#__PURE__*/React.forwardRef(Component));\n}","export default function _taggedTemplateLiteral(strings, raw) {\n  if (!raw) {\n    raw = strings.slice(0);\n  }\n\n  return Object.freeze(Object.defineProperties(strings, {\n    raw: {\n      value: Object.freeze(raw)\n    }\n  }));\n}","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport { alpha } from '../styles/colorManipulator';\nimport ButtonBase from '../ButtonBase';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: _extends({}, theme.typography.button, {\n      boxSizing: 'border-box',\n      minWidth: 64,\n      padding: '6px 16px',\n      borderRadius: theme.shape.borderRadius,\n      color: theme.palette.text.primary,\n      transition: theme.transitions.create(['background-color', 'box-shadow', 'border'], {\n        duration: theme.transitions.duration.short\n      }),\n      '&:hover': {\n        textDecoration: 'none',\n        backgroundColor: alpha(theme.palette.text.primary, theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        },\n        '&$disabled': {\n          backgroundColor: 'transparent'\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    }),\n\n    /* Styles applied to the span element that wraps the children. */\n    label: {\n      width: '100%',\n      // Ensure the correct width for iOS Safari\n      display: 'inherit',\n      alignItems: 'inherit',\n      justifyContent: 'inherit'\n    },\n\n    /* Styles applied to the root element if `variant=\"text\"`. */\n    text: {\n      padding: '6px 8px'\n    },\n\n    /* Styles applied to the root element if `variant=\"text\"` and `color=\"primary\"`. */\n    textPrimary: {\n      color: theme.palette.primary.main,\n      '&:hover': {\n        backgroundColor: alpha(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"text\"` and `color=\"secondary\"`. */\n    textSecondary: {\n      color: theme.palette.secondary.main,\n      '&:hover': {\n        backgroundColor: alpha(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"`. */\n    outlined: {\n      padding: '5px 15px',\n      border: \"1px solid \".concat(theme.palette.type === 'light' ? 'rgba(0, 0, 0, 0.23)' : 'rgba(255, 255, 255, 0.23)'),\n      '&$disabled': {\n        border: \"1px solid \".concat(theme.palette.action.disabledBackground)\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"` and `color=\"primary\"`. */\n    outlinedPrimary: {\n      color: theme.palette.primary.main,\n      border: \"1px solid \".concat(alpha(theme.palette.primary.main, 0.5)),\n      '&:hover': {\n        border: \"1px solid \".concat(theme.palette.primary.main),\n        backgroundColor: alpha(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"` and `color=\"secondary\"`. */\n    outlinedSecondary: {\n      color: theme.palette.secondary.main,\n      border: \"1px solid \".concat(alpha(theme.palette.secondary.main, 0.5)),\n      '&:hover': {\n        border: \"1px solid \".concat(theme.palette.secondary.main),\n        backgroundColor: alpha(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      },\n      '&$disabled': {\n        border: \"1px solid \".concat(theme.palette.action.disabled)\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"contained\"`. */\n    contained: {\n      color: theme.palette.getContrastText(theme.palette.grey[300]),\n      backgroundColor: theme.palette.grey[300],\n      boxShadow: theme.shadows[2],\n      '&:hover': {\n        backgroundColor: theme.palette.grey.A100,\n        boxShadow: theme.shadows[4],\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          boxShadow: theme.shadows[2],\n          backgroundColor: theme.palette.grey[300]\n        },\n        '&$disabled': {\n          backgroundColor: theme.palette.action.disabledBackground\n        }\n      },\n      '&$focusVisible': {\n        boxShadow: theme.shadows[6]\n      },\n      '&:active': {\n        boxShadow: theme.shadows[8]\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled,\n        boxShadow: theme.shadows[0],\n        backgroundColor: theme.palette.action.disabledBackground\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"contained\"` and `color=\"primary\"`. */\n    containedPrimary: {\n      color: theme.palette.primary.contrastText,\n      backgroundColor: theme.palette.primary.main,\n      '&:hover': {\n        backgroundColor: theme.palette.primary.dark,\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: theme.palette.primary.main\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"contained\"` and `color=\"secondary\"`. */\n    containedSecondary: {\n      color: theme.palette.secondary.contrastText,\n      backgroundColor: theme.palette.secondary.main,\n      '&:hover': {\n        backgroundColor: theme.palette.secondary.dark,\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: theme.palette.secondary.main\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `disableElevation={true}`. */\n    disableElevation: {\n      boxShadow: 'none',\n      '&:hover': {\n        boxShadow: 'none'\n      },\n      '&$focusVisible': {\n        boxShadow: 'none'\n      },\n      '&:active': {\n        boxShadow: 'none'\n      },\n      '&$disabled': {\n        boxShadow: 'none'\n      }\n    },\n\n    /* Pseudo-class applied to the ButtonBase root element if the button is keyboard focused. */\n    focusVisible: {},\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the root element if `color=\"inherit\"`. */\n    colorInherit: {\n      color: 'inherit',\n      borderColor: 'currentColor'\n    },\n\n    /* Styles applied to the root element if `size=\"small\"` and `variant=\"text\"`. */\n    textSizeSmall: {\n      padding: '4px 5px',\n      fontSize: theme.typography.pxToRem(13)\n    },\n\n    /* Styles applied to the root element if `size=\"large\"` and `variant=\"text\"`. */\n    textSizeLarge: {\n      padding: '8px 11px',\n      fontSize: theme.typography.pxToRem(15)\n    },\n\n    /* Styles applied to the root element if `size=\"small\"` and `variant=\"outlined\"`. */\n    outlinedSizeSmall: {\n      padding: '3px 9px',\n      fontSize: theme.typography.pxToRem(13)\n    },\n\n    /* Styles applied to the root element if `size=\"large\"` and `variant=\"outlined\"`. */\n    outlinedSizeLarge: {\n      padding: '7px 21px',\n      fontSize: theme.typography.pxToRem(15)\n    },\n\n    /* Styles applied to the root element if `size=\"small\"` and `variant=\"contained\"`. */\n    containedSizeSmall: {\n      padding: '4px 10px',\n      fontSize: theme.typography.pxToRem(13)\n    },\n\n    /* Styles applied to the root element if `size=\"large\"` and `variant=\"contained\"`. */\n    containedSizeLarge: {\n      padding: '8px 22px',\n      fontSize: theme.typography.pxToRem(15)\n    },\n\n    /* Styles applied to the root element if `size=\"small\"`. */\n    sizeSmall: {},\n\n    /* Styles applied to the root element if `size=\"large\"`. */\n    sizeLarge: {},\n\n    /* Styles applied to the root element if `fullWidth={true}`. */\n    fullWidth: {\n      width: '100%'\n    },\n\n    /* Styles applied to the startIcon element if supplied. */\n    startIcon: {\n      display: 'inherit',\n      marginRight: 8,\n      marginLeft: -4,\n      '&$iconSizeSmall': {\n        marginLeft: -2\n      }\n    },\n\n    /* Styles applied to the endIcon element if supplied. */\n    endIcon: {\n      display: 'inherit',\n      marginRight: -4,\n      marginLeft: 8,\n      '&$iconSizeSmall': {\n        marginRight: -2\n      }\n    },\n\n    /* Styles applied to the icon element if supplied and `size=\"small\"`. */\n    iconSizeSmall: {\n      '& > *:first-child': {\n        fontSize: 18\n      }\n    },\n\n    /* Styles applied to the icon element if supplied and `size=\"medium\"`. */\n    iconSizeMedium: {\n      '& > *:first-child': {\n        fontSize: 20\n      }\n    },\n\n    /* Styles applied to the icon element if supplied and `size=\"large\"`. */\n    iconSizeLarge: {\n      '& > *:first-child': {\n        fontSize: 22\n      }\n    }\n  };\n};\nvar Button = /*#__PURE__*/React.forwardRef(function Button(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'default' : _props$color,\n      _props$component = props.component,\n      component = _props$component === void 0 ? 'button' : _props$component,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      _props$disableElevati = props.disableElevation,\n      disableElevation = _props$disableElevati === void 0 ? false : _props$disableElevati,\n      _props$disableFocusRi = props.disableFocusRipple,\n      disableFocusRipple = _props$disableFocusRi === void 0 ? false : _props$disableFocusRi,\n      endIconProp = props.endIcon,\n      focusVisibleClassName = props.focusVisibleClassName,\n      _props$fullWidth = props.fullWidth,\n      fullWidth = _props$fullWidth === void 0 ? false : _props$fullWidth,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      startIconProp = props.startIcon,\n      _props$type = props.type,\n      type = _props$type === void 0 ? 'button' : _props$type,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'text' : _props$variant,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"color\", \"component\", \"disabled\", \"disableElevation\", \"disableFocusRipple\", \"endIcon\", \"focusVisibleClassName\", \"fullWidth\", \"size\", \"startIcon\", \"type\", \"variant\"]);\n\n  var startIcon = startIconProp && /*#__PURE__*/React.createElement(\"span\", {\n    className: clsx(classes.startIcon, classes[\"iconSize\".concat(capitalize(size))])\n  }, startIconProp);\n  var endIcon = endIconProp && /*#__PURE__*/React.createElement(\"span\", {\n    className: clsx(classes.endIcon, classes[\"iconSize\".concat(capitalize(size))])\n  }, endIconProp);\n  return /*#__PURE__*/React.createElement(ButtonBase, _extends({\n    className: clsx(classes.root, classes[variant], className, color === 'inherit' ? classes.colorInherit : color !== 'default' && classes[\"\".concat(variant).concat(capitalize(color))], size !== 'medium' && [classes[\"\".concat(variant, \"Size\").concat(capitalize(size))], classes[\"size\".concat(capitalize(size))]], disableElevation && classes.disableElevation, disabled && classes.disabled, fullWidth && classes.fullWidth),\n    component: component,\n    disabled: disabled,\n    focusRipple: !disableFocusRipple,\n    focusVisibleClassName: clsx(classes.focusVisible, focusVisibleClassName),\n    ref: ref,\n    type: type\n  }, other), /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.label\n  }, startIcon, children, endIcon));\n});\nprocess.env.NODE_ENV !== \"production\" ? Button.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the button.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['default', 'inherit', 'primary', 'secondary']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, the button will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, no elevation is used.\n   */\n  disableElevation: PropTypes.bool,\n\n  /**\n   * If `true`, the  keyboard focus ripple will be disabled.\n   */\n  disableFocusRipple: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   *\n   * ⚠️ Without a ripple there is no styling for :focus-visible by default. Be sure\n   * to highlight the element by applying separate styles with the `focusVisibleClassName`.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * Element placed after the children.\n   */\n  endIcon: PropTypes.node,\n\n  /**\n   * @ignore\n   */\n  focusVisibleClassName: PropTypes.string,\n\n  /**\n   * If `true`, the button will take up the full width of its container.\n   */\n  fullWidth: PropTypes.bool,\n\n  /**\n   * The URL to link to when the button is clicked.\n   * If defined, an `a` element will be used as the root node.\n   */\n  href: PropTypes.string,\n\n  /**\n   * The size of the button.\n   * `small` is equivalent to the dense button styling.\n   */\n  size: PropTypes.oneOf(['large', 'medium', 'small']),\n\n  /**\n   * Element placed before the children.\n   */\n  startIcon: PropTypes.node,\n\n  /**\n   * @ignore\n   */\n  type: PropTypes.oneOfType([PropTypes.oneOf(['button', 'reset', 'submit']), PropTypes.string]),\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['contained', 'outlined', 'text'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiButton'\n})(Button);","import { GraphQLError } from \"./GraphQLError.mjs\";\n/**\n * Produces a GraphQLError representing a syntax error, containing useful\n * descriptive information about the syntax error's position in the source.\n */\n\nexport function syntaxError(source, position, description) {\n  return new GraphQLError(\"Syntax Error: \".concat(description), undefined, source, [position]);\n}\n","/**\n * An exported enum describing the different kinds of tokens that the\n * lexer emits.\n */\nexport var TokenKind = Object.freeze({\n  SOF: '<SOF>',\n  EOF: '<EOF>',\n  BANG: '!',\n  DOLLAR: '$',\n  AMP: '&',\n  PAREN_L: '(',\n  PAREN_R: ')',\n  SPREAD: '...',\n  COLON: ':',\n  EQUALS: '=',\n  AT: '@',\n  BRACKET_L: '[',\n  BRACKET_R: ']',\n  BRACE_L: '{',\n  PIPE: '|',\n  BRACE_R: '}',\n  NAME: 'Name',\n  INT: 'Int',\n  FLOAT: 'Float',\n  STRING: 'String',\n  BLOCK_STRING: 'BlockString',\n  COMMENT: 'Comment'\n});\n/**\n * The enum type representing the token kinds values.\n */\n","function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nimport { SYMBOL_TO_STRING_TAG } from \"../polyfills/symbols.mjs\";\nimport inspect from \"../jsutils/inspect.mjs\";\nimport devAssert from \"../jsutils/devAssert.mjs\";\nimport instanceOf from \"../jsutils/instanceOf.mjs\";\n\n/**\n * A representation of source input to GraphQL. The `name` and `locationOffset` parameters are\n * optional, but they are useful for clients who store GraphQL documents in source files.\n * For example, if the GraphQL input starts at line 40 in a file named `Foo.graphql`, it might\n * be useful for `name` to be `\"Foo.graphql\"` and location to be `{ line: 40, column: 1 }`.\n * The `line` and `column` properties in `locationOffset` are 1-indexed.\n */\nexport var Source = /*#__PURE__*/function () {\n  function Source(body) {\n    var name = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'GraphQL request';\n    var locationOffset = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {\n      line: 1,\n      column: 1\n    };\n    typeof body === 'string' || devAssert(0, \"Body must be a string. Received: \".concat(inspect(body), \".\"));\n    this.body = body;\n    this.name = name;\n    this.locationOffset = locationOffset;\n    this.locationOffset.line > 0 || devAssert(0, 'line in locationOffset is 1-indexed and must be positive.');\n    this.locationOffset.column > 0 || devAssert(0, 'column in locationOffset is 1-indexed and must be positive.');\n  } // $FlowFixMe[unsupported-syntax] Flow doesn't support computed properties yet\n\n\n  _createClass(Source, [{\n    key: SYMBOL_TO_STRING_TAG,\n    get: function get() {\n      return 'Source';\n    }\n  }]);\n\n  return Source;\n}();\n/**\n * Test if the given value is a Source object.\n *\n * @internal\n */\n\n// eslint-disable-next-line no-redeclare\nexport function isSource(source) {\n  return instanceOf(source, Source);\n}\n","/**\n * The set of allowed directive location values.\n */\nexport var DirectiveLocation = Object.freeze({\n  // Request Definitions\n  QUERY: 'QUERY',\n  MUTATION: 'MUTATION',\n  SUBSCRIPTION: 'SUBSCRIPTION',\n  FIELD: 'FIELD',\n  FRAGMENT_DEFINITION: 'FRAGMENT_DEFINITION',\n  FRAGMENT_SPREAD: 'FRAGMENT_SPREAD',\n  INLINE_FRAGMENT: 'INLINE_FRAGMENT',\n  VARIABLE_DEFINITION: 'VARIABLE_DEFINITION',\n  // Type System Definitions\n  SCHEMA: 'SCHEMA',\n  SCALAR: 'SCALAR',\n  OBJECT: 'OBJECT',\n  FIELD_DEFINITION: 'FIELD_DEFINITION',\n  ARGUMENT_DEFINITION: 'ARGUMENT_DEFINITION',\n  INTERFACE: 'INTERFACE',\n  UNION: 'UNION',\n  ENUM: 'ENUM',\n  ENUM_VALUE: 'ENUM_VALUE',\n  INPUT_OBJECT: 'INPUT_OBJECT',\n  INPUT_FIELD_DEFINITION: 'INPUT_FIELD_DEFINITION'\n});\n/**\n * The enum type representing the directive location values.\n */\n","import { syntaxError } from \"../error/syntaxError.mjs\";\nimport { Token } from \"./ast.mjs\";\nimport { TokenKind } from \"./tokenKind.mjs\";\nimport { dedentBlockStringValue } from \"./blockString.mjs\";\n/**\n * Given a Source object, creates a Lexer for that source.\n * A Lexer is a stateful stream generator in that every time\n * it is advanced, it returns the next token in the Source. Assuming the\n * source lexes, the final Token emitted by the lexer will be of kind\n * EOF, after which the lexer will repeatedly return the same EOF token\n * whenever called.\n */\n\nexport var Lexer = /*#__PURE__*/function () {\n  /**\n   * The previously focused non-ignored token.\n   */\n\n  /**\n   * The currently focused non-ignored token.\n   */\n\n  /**\n   * The (1-indexed) line containing the current token.\n   */\n\n  /**\n   * The character offset at which the current line begins.\n   */\n  function Lexer(source) {\n    var startOfFileToken = new Token(TokenKind.SOF, 0, 0, 0, 0, null);\n    this.source = source;\n    this.lastToken = startOfFileToken;\n    this.token = startOfFileToken;\n    this.line = 1;\n    this.lineStart = 0;\n  }\n  /**\n   * Advances the token stream to the next non-ignored token.\n   */\n\n\n  var _proto = Lexer.prototype;\n\n  _proto.advance = function advance() {\n    this.lastToken = this.token;\n    var token = this.token = this.lookahead();\n    return token;\n  }\n  /**\n   * Looks ahead and returns the next non-ignored token, but does not change\n   * the state of Lexer.\n   */\n  ;\n\n  _proto.lookahead = function lookahead() {\n    var token = this.token;\n\n    if (token.kind !== TokenKind.EOF) {\n      do {\n        var _token$next;\n\n        // Note: next is only mutable during parsing, so we cast to allow this.\n        token = (_token$next = token.next) !== null && _token$next !== void 0 ? _token$next : token.next = readToken(this, token);\n      } while (token.kind === TokenKind.COMMENT);\n    }\n\n    return token;\n  };\n\n  return Lexer;\n}();\n/**\n * @internal\n */\n\nexport function isPunctuatorTokenKind(kind) {\n  return kind === TokenKind.BANG || kind === TokenKind.DOLLAR || kind === TokenKind.AMP || kind === TokenKind.PAREN_L || kind === TokenKind.PAREN_R || kind === TokenKind.SPREAD || kind === TokenKind.COLON || kind === TokenKind.EQUALS || kind === TokenKind.AT || kind === TokenKind.BRACKET_L || kind === TokenKind.BRACKET_R || kind === TokenKind.BRACE_L || kind === TokenKind.PIPE || kind === TokenKind.BRACE_R;\n}\n\nfunction printCharCode(code) {\n  return (// NaN/undefined represents access beyond the end of the file.\n    isNaN(code) ? TokenKind.EOF : // Trust JSON for ASCII.\n    code < 0x007f ? JSON.stringify(String.fromCharCode(code)) : // Otherwise print the escaped form.\n    \"\\\"\\\\u\".concat(('00' + code.toString(16).toUpperCase()).slice(-4), \"\\\"\")\n  );\n}\n/**\n * Gets the next token from the source starting at the given position.\n *\n * This skips over whitespace until it finds the next lexable token, then lexes\n * punctuators immediately or calls the appropriate helper function for more\n * complicated tokens.\n */\n\n\nfunction readToken(lexer, prev) {\n  var source = lexer.source;\n  var body = source.body;\n  var bodyLength = body.length;\n  var pos = prev.end;\n\n  while (pos < bodyLength) {\n    var code = body.charCodeAt(pos);\n    var _line = lexer.line;\n\n    var _col = 1 + pos - lexer.lineStart; // SourceCharacter\n\n\n    switch (code) {\n      case 0xfeff: // <BOM>\n\n      case 9: //   \\t\n\n      case 32: //  <space>\n\n      case 44:\n        //  ,\n        ++pos;\n        continue;\n\n      case 10:\n        //  \\n\n        ++pos;\n        ++lexer.line;\n        lexer.lineStart = pos;\n        continue;\n\n      case 13:\n        //  \\r\n        if (body.charCodeAt(pos + 1) === 10) {\n          pos += 2;\n        } else {\n          ++pos;\n        }\n\n        ++lexer.line;\n        lexer.lineStart = pos;\n        continue;\n\n      case 33:\n        //  !\n        return new Token(TokenKind.BANG, pos, pos + 1, _line, _col, prev);\n\n      case 35:\n        //  #\n        return readComment(source, pos, _line, _col, prev);\n\n      case 36:\n        //  $\n        return new Token(TokenKind.DOLLAR, pos, pos + 1, _line, _col, prev);\n\n      case 38:\n        //  &\n        return new Token(TokenKind.AMP, pos, pos + 1, _line, _col, prev);\n\n      case 40:\n        //  (\n        return new Token(TokenKind.PAREN_L, pos, pos + 1, _line, _col, prev);\n\n      case 41:\n        //  )\n        return new Token(TokenKind.PAREN_R, pos, pos + 1, _line, _col, prev);\n\n      case 46:\n        //  .\n        if (body.charCodeAt(pos + 1) === 46 && body.charCodeAt(pos + 2) === 46) {\n          return new Token(TokenKind.SPREAD, pos, pos + 3, _line, _col, prev);\n        }\n\n        break;\n\n      case 58:\n        //  :\n        return new Token(TokenKind.COLON, pos, pos + 1, _line, _col, prev);\n\n      case 61:\n        //  =\n        return new Token(TokenKind.EQUALS, pos, pos + 1, _line, _col, prev);\n\n      case 64:\n        //  @\n        return new Token(TokenKind.AT, pos, pos + 1, _line, _col, prev);\n\n      case 91:\n        //  [\n        return new Token(TokenKind.BRACKET_L, pos, pos + 1, _line, _col, prev);\n\n      case 93:\n        //  ]\n        return new Token(TokenKind.BRACKET_R, pos, pos + 1, _line, _col, prev);\n\n      case 123:\n        // {\n        return new Token(TokenKind.BRACE_L, pos, pos + 1, _line, _col, prev);\n\n      case 124:\n        // |\n        return new Token(TokenKind.PIPE, pos, pos + 1, _line, _col, prev);\n\n      case 125:\n        // }\n        return new Token(TokenKind.BRACE_R, pos, pos + 1, _line, _col, prev);\n\n      case 34:\n        //  \"\n        if (body.charCodeAt(pos + 1) === 34 && body.charCodeAt(pos + 2) === 34) {\n          return readBlockString(source, pos, _line, _col, prev, lexer);\n        }\n\n        return readString(source, pos, _line, _col, prev);\n\n      case 45: //  -\n\n      case 48: //  0\n\n      case 49: //  1\n\n      case 50: //  2\n\n      case 51: //  3\n\n      case 52: //  4\n\n      case 53: //  5\n\n      case 54: //  6\n\n      case 55: //  7\n\n      case 56: //  8\n\n      case 57:\n        //  9\n        return readNumber(source, pos, code, _line, _col, prev);\n\n      case 65: //  A\n\n      case 66: //  B\n\n      case 67: //  C\n\n      case 68: //  D\n\n      case 69: //  E\n\n      case 70: //  F\n\n      case 71: //  G\n\n      case 72: //  H\n\n      case 73: //  I\n\n      case 74: //  J\n\n      case 75: //  K\n\n      case 76: //  L\n\n      case 77: //  M\n\n      case 78: //  N\n\n      case 79: //  O\n\n      case 80: //  P\n\n      case 81: //  Q\n\n      case 82: //  R\n\n      case 83: //  S\n\n      case 84: //  T\n\n      case 85: //  U\n\n      case 86: //  V\n\n      case 87: //  W\n\n      case 88: //  X\n\n      case 89: //  Y\n\n      case 90: //  Z\n\n      case 95: //  _\n\n      case 97: //  a\n\n      case 98: //  b\n\n      case 99: //  c\n\n      case 100: // d\n\n      case 101: // e\n\n      case 102: // f\n\n      case 103: // g\n\n      case 104: // h\n\n      case 105: // i\n\n      case 106: // j\n\n      case 107: // k\n\n      case 108: // l\n\n      case 109: // m\n\n      case 110: // n\n\n      case 111: // o\n\n      case 112: // p\n\n      case 113: // q\n\n      case 114: // r\n\n      case 115: // s\n\n      case 116: // t\n\n      case 117: // u\n\n      case 118: // v\n\n      case 119: // w\n\n      case 120: // x\n\n      case 121: // y\n\n      case 122:\n        // z\n        return readName(source, pos, _line, _col, prev);\n    }\n\n    throw syntaxError(source, pos, unexpectedCharacterMessage(code));\n  }\n\n  var line = lexer.line;\n  var col = 1 + pos - lexer.lineStart;\n  return new Token(TokenKind.EOF, bodyLength, bodyLength, line, col, prev);\n}\n/**\n * Report a message that an unexpected character was encountered.\n */\n\n\nfunction unexpectedCharacterMessage(code) {\n  if (code < 0x0020 && code !== 0x0009 && code !== 0x000a && code !== 0x000d) {\n    return \"Cannot contain the invalid character \".concat(printCharCode(code), \".\");\n  }\n\n  if (code === 39) {\n    // '\n    return 'Unexpected single quote character (\\'), did you mean to use a double quote (\")?';\n  }\n\n  return \"Cannot parse the unexpected character \".concat(printCharCode(code), \".\");\n}\n/**\n * Reads a comment token from the source file.\n *\n * #[\\u0009\\u0020-\\uFFFF]*\n */\n\n\nfunction readComment(source, start, line, col, prev) {\n  var body = source.body;\n  var code;\n  var position = start;\n\n  do {\n    code = body.charCodeAt(++position);\n  } while (!isNaN(code) && ( // SourceCharacter but not LineTerminator\n  code > 0x001f || code === 0x0009));\n\n  return new Token(TokenKind.COMMENT, start, position, line, col, prev, body.slice(start + 1, position));\n}\n/**\n * Reads a number token from the source file, either a float\n * or an int depending on whether a decimal point appears.\n *\n * Int:   -?(0|[1-9][0-9]*)\n * Float: -?(0|[1-9][0-9]*)(\\.[0-9]+)?((E|e)(+|-)?[0-9]+)?\n */\n\n\nfunction readNumber(source, start, firstCode, line, col, prev) {\n  var body = source.body;\n  var code = firstCode;\n  var position = start;\n  var isFloat = false;\n\n  if (code === 45) {\n    // -\n    code = body.charCodeAt(++position);\n  }\n\n  if (code === 48) {\n    // 0\n    code = body.charCodeAt(++position);\n\n    if (code >= 48 && code <= 57) {\n      throw syntaxError(source, position, \"Invalid number, unexpected digit after 0: \".concat(printCharCode(code), \".\"));\n    }\n  } else {\n    position = readDigits(source, position, code);\n    code = body.charCodeAt(position);\n  }\n\n  if (code === 46) {\n    // .\n    isFloat = true;\n    code = body.charCodeAt(++position);\n    position = readDigits(source, position, code);\n    code = body.charCodeAt(position);\n  }\n\n  if (code === 69 || code === 101) {\n    // E e\n    isFloat = true;\n    code = body.charCodeAt(++position);\n\n    if (code === 43 || code === 45) {\n      // + -\n      code = body.charCodeAt(++position);\n    }\n\n    position = readDigits(source, position, code);\n    code = body.charCodeAt(position);\n  } // Numbers cannot be followed by . or NameStart\n\n\n  if (code === 46 || isNameStart(code)) {\n    throw syntaxError(source, position, \"Invalid number, expected digit but got: \".concat(printCharCode(code), \".\"));\n  }\n\n  return new Token(isFloat ? TokenKind.FLOAT : TokenKind.INT, start, position, line, col, prev, body.slice(start, position));\n}\n/**\n * Returns the new position in the source after reading digits.\n */\n\n\nfunction readDigits(source, start, firstCode) {\n  var body = source.body;\n  var position = start;\n  var code = firstCode;\n\n  if (code >= 48 && code <= 57) {\n    // 0 - 9\n    do {\n      code = body.charCodeAt(++position);\n    } while (code >= 48 && code <= 57); // 0 - 9\n\n\n    return position;\n  }\n\n  throw syntaxError(source, position, \"Invalid number, expected digit but got: \".concat(printCharCode(code), \".\"));\n}\n/**\n * Reads a string token from the source file.\n *\n * \"([^\"\\\\\\u000A\\u000D]|(\\\\(u[0-9a-fA-F]{4}|[\"\\\\/bfnrt])))*\"\n */\n\n\nfunction readString(source, start, line, col, prev) {\n  var body = source.body;\n  var position = start + 1;\n  var chunkStart = position;\n  var code = 0;\n  var value = '';\n\n  while (position < body.length && !isNaN(code = body.charCodeAt(position)) && // not LineTerminator\n  code !== 0x000a && code !== 0x000d) {\n    // Closing Quote (\")\n    if (code === 34) {\n      value += body.slice(chunkStart, position);\n      return new Token(TokenKind.STRING, start, position + 1, line, col, prev, value);\n    } // SourceCharacter\n\n\n    if (code < 0x0020 && code !== 0x0009) {\n      throw syntaxError(source, position, \"Invalid character within String: \".concat(printCharCode(code), \".\"));\n    }\n\n    ++position;\n\n    if (code === 92) {\n      // \\\n      value += body.slice(chunkStart, position - 1);\n      code = body.charCodeAt(position);\n\n      switch (code) {\n        case 34:\n          value += '\"';\n          break;\n\n        case 47:\n          value += '/';\n          break;\n\n        case 92:\n          value += '\\\\';\n          break;\n\n        case 98:\n          value += '\\b';\n          break;\n\n        case 102:\n          value += '\\f';\n          break;\n\n        case 110:\n          value += '\\n';\n          break;\n\n        case 114:\n          value += '\\r';\n          break;\n\n        case 116:\n          value += '\\t';\n          break;\n\n        case 117:\n          {\n            // uXXXX\n            var charCode = uniCharCode(body.charCodeAt(position + 1), body.charCodeAt(position + 2), body.charCodeAt(position + 3), body.charCodeAt(position + 4));\n\n            if (charCode < 0) {\n              var invalidSequence = body.slice(position + 1, position + 5);\n              throw syntaxError(source, position, \"Invalid character escape sequence: \\\\u\".concat(invalidSequence, \".\"));\n            }\n\n            value += String.fromCharCode(charCode);\n            position += 4;\n            break;\n          }\n\n        default:\n          throw syntaxError(source, position, \"Invalid character escape sequence: \\\\\".concat(String.fromCharCode(code), \".\"));\n      }\n\n      ++position;\n      chunkStart = position;\n    }\n  }\n\n  throw syntaxError(source, position, 'Unterminated string.');\n}\n/**\n * Reads a block string token from the source file.\n *\n * \"\"\"(\"?\"?(\\\\\"\"\"|\\\\(?!=\"\"\")|[^\"\\\\]))*\"\"\"\n */\n\n\nfunction readBlockString(source, start, line, col, prev, lexer) {\n  var body = source.body;\n  var position = start + 3;\n  var chunkStart = position;\n  var code = 0;\n  var rawValue = '';\n\n  while (position < body.length && !isNaN(code = body.charCodeAt(position))) {\n    // Closing Triple-Quote (\"\"\")\n    if (code === 34 && body.charCodeAt(position + 1) === 34 && body.charCodeAt(position + 2) === 34) {\n      rawValue += body.slice(chunkStart, position);\n      return new Token(TokenKind.BLOCK_STRING, start, position + 3, line, col, prev, dedentBlockStringValue(rawValue));\n    } // SourceCharacter\n\n\n    if (code < 0x0020 && code !== 0x0009 && code !== 0x000a && code !== 0x000d) {\n      throw syntaxError(source, position, \"Invalid character within String: \".concat(printCharCode(code), \".\"));\n    }\n\n    if (code === 10) {\n      // new line\n      ++position;\n      ++lexer.line;\n      lexer.lineStart = position;\n    } else if (code === 13) {\n      // carriage return\n      if (body.charCodeAt(position + 1) === 10) {\n        position += 2;\n      } else {\n        ++position;\n      }\n\n      ++lexer.line;\n      lexer.lineStart = position;\n    } else if ( // Escape Triple-Quote (\\\"\"\")\n    code === 92 && body.charCodeAt(position + 1) === 34 && body.charCodeAt(position + 2) === 34 && body.charCodeAt(position + 3) === 34) {\n      rawValue += body.slice(chunkStart, position) + '\"\"\"';\n      position += 4;\n      chunkStart = position;\n    } else {\n      ++position;\n    }\n  }\n\n  throw syntaxError(source, position, 'Unterminated string.');\n}\n/**\n * Converts four hexadecimal chars to the integer that the\n * string represents. For example, uniCharCode('0','0','0','f')\n * will return 15, and uniCharCode('0','0','f','f') returns 255.\n *\n * Returns a negative number on error, if a char was invalid.\n *\n * This is implemented by noting that char2hex() returns -1 on error,\n * which means the result of ORing the char2hex() will also be negative.\n */\n\n\nfunction uniCharCode(a, b, c, d) {\n  return char2hex(a) << 12 | char2hex(b) << 8 | char2hex(c) << 4 | char2hex(d);\n}\n/**\n * Converts a hex character to its integer value.\n * '0' becomes 0, '9' becomes 9\n * 'A' becomes 10, 'F' becomes 15\n * 'a' becomes 10, 'f' becomes 15\n *\n * Returns -1 on error.\n */\n\n\nfunction char2hex(a) {\n  return a >= 48 && a <= 57 ? a - 48 // 0-9\n  : a >= 65 && a <= 70 ? a - 55 // A-F\n  : a >= 97 && a <= 102 ? a - 87 // a-f\n  : -1;\n}\n/**\n * Reads an alphanumeric + underscore name from the source.\n *\n * [_A-Za-z][_0-9A-Za-z]*\n */\n\n\nfunction readName(source, start, line, col, prev) {\n  var body = source.body;\n  var bodyLength = body.length;\n  var position = start + 1;\n  var code = 0;\n\n  while (position !== bodyLength && !isNaN(code = body.charCodeAt(position)) && (code === 95 || // _\n  code >= 48 && code <= 57 || // 0-9\n  code >= 65 && code <= 90 || // A-Z\n  code >= 97 && code <= 122) // a-z\n  ) {\n    ++position;\n  }\n\n  return new Token(TokenKind.NAME, start, position, line, col, prev, body.slice(start, position));\n} // _ A-Z a-z\n\n\nfunction isNameStart(code) {\n  return code === 95 || code >= 65 && code <= 90 || code >= 97 && code <= 122;\n}\n","import { syntaxError } from \"../error/syntaxError.mjs\";\nimport { Kind } from \"./kinds.mjs\";\nimport { Location } from \"./ast.mjs\";\nimport { TokenKind } from \"./tokenKind.mjs\";\nimport { Source, isSource } from \"./source.mjs\";\nimport { DirectiveLocation } from \"./directiveLocation.mjs\";\nimport { Lexer, isPunctuatorTokenKind } from \"./lexer.mjs\";\n/**\n * Configuration options to control parser behavior\n */\n\n/**\n * Given a GraphQL source, parses it into a Document.\n * Throws GraphQLError if a syntax error is encountered.\n */\nexport function parse(source, options) {\n  var parser = new Parser(source, options);\n  return parser.parseDocument();\n}\n/**\n * Given a string containing a GraphQL value (ex. `[42]`), parse the AST for\n * that value.\n * Throws GraphQLError if a syntax error is encountered.\n *\n * This is useful within tools that operate upon GraphQL Values directly and\n * in isolation of complete GraphQL documents.\n *\n * Consider providing the results to the utility function: valueFromAST().\n */\n\nexport function parseValue(source, options) {\n  var parser = new Parser(source, options);\n  parser.expectToken(TokenKind.SOF);\n  var value = parser.parseValueLiteral(false);\n  parser.expectToken(TokenKind.EOF);\n  return value;\n}\n/**\n * Given a string containing a GraphQL Type (ex. `[Int!]`), parse the AST for\n * that type.\n * Throws GraphQLError if a syntax error is encountered.\n *\n * This is useful within tools that operate upon GraphQL Types directly and\n * in isolation of complete GraphQL documents.\n *\n * Consider providing the results to the utility function: typeFromAST().\n */\n\nexport function parseType(source, options) {\n  var parser = new Parser(source, options);\n  parser.expectToken(TokenKind.SOF);\n  var type = parser.parseTypeReference();\n  parser.expectToken(TokenKind.EOF);\n  return type;\n}\n/**\n * This class is exported only to assist people in implementing their own parsers\n * without duplicating too much code and should be used only as last resort for cases\n * such as experimental syntax or if certain features could not be contributed upstream.\n *\n * It is still part of the internal API and is versioned, so any changes to it are never\n * considered breaking changes. If you still need to support multiple versions of the\n * library, please use the `versionInfo` variable for version detection.\n *\n * @internal\n */\n\nexport var Parser = /*#__PURE__*/function () {\n  function Parser(source, options) {\n    var sourceObj = isSource(source) ? source : new Source(source);\n    this._lexer = new Lexer(sourceObj);\n    this._options = options;\n  }\n  /**\n   * Converts a name lex token into a name parse node.\n   */\n\n\n  var _proto = Parser.prototype;\n\n  _proto.parseName = function parseName() {\n    var token = this.expectToken(TokenKind.NAME);\n    return {\n      kind: Kind.NAME,\n      value: token.value,\n      loc: this.loc(token)\n    };\n  } // Implements the parsing rules in the Document section.\n\n  /**\n   * Document : Definition+\n   */\n  ;\n\n  _proto.parseDocument = function parseDocument() {\n    var start = this._lexer.token;\n    return {\n      kind: Kind.DOCUMENT,\n      definitions: this.many(TokenKind.SOF, this.parseDefinition, TokenKind.EOF),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * Definition :\n   *   - ExecutableDefinition\n   *   - TypeSystemDefinition\n   *   - TypeSystemExtension\n   *\n   * ExecutableDefinition :\n   *   - OperationDefinition\n   *   - FragmentDefinition\n   */\n  ;\n\n  _proto.parseDefinition = function parseDefinition() {\n    if (this.peek(TokenKind.NAME)) {\n      switch (this._lexer.token.value) {\n        case 'query':\n        case 'mutation':\n        case 'subscription':\n          return this.parseOperationDefinition();\n\n        case 'fragment':\n          return this.parseFragmentDefinition();\n\n        case 'schema':\n        case 'scalar':\n        case 'type':\n        case 'interface':\n        case 'union':\n        case 'enum':\n        case 'input':\n        case 'directive':\n          return this.parseTypeSystemDefinition();\n\n        case 'extend':\n          return this.parseTypeSystemExtension();\n      }\n    } else if (this.peek(TokenKind.BRACE_L)) {\n      return this.parseOperationDefinition();\n    } else if (this.peekDescription()) {\n      return this.parseTypeSystemDefinition();\n    }\n\n    throw this.unexpected();\n  } // Implements the parsing rules in the Operations section.\n\n  /**\n   * OperationDefinition :\n   *  - SelectionSet\n   *  - OperationType Name? VariableDefinitions? Directives? SelectionSet\n   */\n  ;\n\n  _proto.parseOperationDefinition = function parseOperationDefinition() {\n    var start = this._lexer.token;\n\n    if (this.peek(TokenKind.BRACE_L)) {\n      return {\n        kind: Kind.OPERATION_DEFINITION,\n        operation: 'query',\n        name: undefined,\n        variableDefinitions: [],\n        directives: [],\n        selectionSet: this.parseSelectionSet(),\n        loc: this.loc(start)\n      };\n    }\n\n    var operation = this.parseOperationType();\n    var name;\n\n    if (this.peek(TokenKind.NAME)) {\n      name = this.parseName();\n    }\n\n    return {\n      kind: Kind.OPERATION_DEFINITION,\n      operation: operation,\n      name: name,\n      variableDefinitions: this.parseVariableDefinitions(),\n      directives: this.parseDirectives(false),\n      selectionSet: this.parseSelectionSet(),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * OperationType : one of query mutation subscription\n   */\n  ;\n\n  _proto.parseOperationType = function parseOperationType() {\n    var operationToken = this.expectToken(TokenKind.NAME);\n\n    switch (operationToken.value) {\n      case 'query':\n        return 'query';\n\n      case 'mutation':\n        return 'mutation';\n\n      case 'subscription':\n        return 'subscription';\n    }\n\n    throw this.unexpected(operationToken);\n  }\n  /**\n   * VariableDefinitions : ( VariableDefinition+ )\n   */\n  ;\n\n  _proto.parseVariableDefinitions = function parseVariableDefinitions() {\n    return this.optionalMany(TokenKind.PAREN_L, this.parseVariableDefinition, TokenKind.PAREN_R);\n  }\n  /**\n   * VariableDefinition : Variable : Type DefaultValue? Directives[Const]?\n   */\n  ;\n\n  _proto.parseVariableDefinition = function parseVariableDefinition() {\n    var start = this._lexer.token;\n    return {\n      kind: Kind.VARIABLE_DEFINITION,\n      variable: this.parseVariable(),\n      type: (this.expectToken(TokenKind.COLON), this.parseTypeReference()),\n      defaultValue: this.expectOptionalToken(TokenKind.EQUALS) ? this.parseValueLiteral(true) : undefined,\n      directives: this.parseDirectives(true),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * Variable : $ Name\n   */\n  ;\n\n  _proto.parseVariable = function parseVariable() {\n    var start = this._lexer.token;\n    this.expectToken(TokenKind.DOLLAR);\n    return {\n      kind: Kind.VARIABLE,\n      name: this.parseName(),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * SelectionSet : { Selection+ }\n   */\n  ;\n\n  _proto.parseSelectionSet = function parseSelectionSet() {\n    var start = this._lexer.token;\n    return {\n      kind: Kind.SELECTION_SET,\n      selections: this.many(TokenKind.BRACE_L, this.parseSelection, TokenKind.BRACE_R),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * Selection :\n   *   - Field\n   *   - FragmentSpread\n   *   - InlineFragment\n   */\n  ;\n\n  _proto.parseSelection = function parseSelection() {\n    return this.peek(TokenKind.SPREAD) ? this.parseFragment() : this.parseField();\n  }\n  /**\n   * Field : Alias? Name Arguments? Directives? SelectionSet?\n   *\n   * Alias : Name :\n   */\n  ;\n\n  _proto.parseField = function parseField() {\n    var start = this._lexer.token;\n    var nameOrAlias = this.parseName();\n    var alias;\n    var name;\n\n    if (this.expectOptionalToken(TokenKind.COLON)) {\n      alias = nameOrAlias;\n      name = this.parseName();\n    } else {\n      name = nameOrAlias;\n    }\n\n    return {\n      kind: Kind.FIELD,\n      alias: alias,\n      name: name,\n      arguments: this.parseArguments(false),\n      directives: this.parseDirectives(false),\n      selectionSet: this.peek(TokenKind.BRACE_L) ? this.parseSelectionSet() : undefined,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * Arguments[Const] : ( Argument[?Const]+ )\n   */\n  ;\n\n  _proto.parseArguments = function parseArguments(isConst) {\n    var item = isConst ? this.parseConstArgument : this.parseArgument;\n    return this.optionalMany(TokenKind.PAREN_L, item, TokenKind.PAREN_R);\n  }\n  /**\n   * Argument[Const] : Name : Value[?Const]\n   */\n  ;\n\n  _proto.parseArgument = function parseArgument() {\n    var start = this._lexer.token;\n    var name = this.parseName();\n    this.expectToken(TokenKind.COLON);\n    return {\n      kind: Kind.ARGUMENT,\n      name: name,\n      value: this.parseValueLiteral(false),\n      loc: this.loc(start)\n    };\n  };\n\n  _proto.parseConstArgument = function parseConstArgument() {\n    var start = this._lexer.token;\n    return {\n      kind: Kind.ARGUMENT,\n      name: this.parseName(),\n      value: (this.expectToken(TokenKind.COLON), this.parseValueLiteral(true)),\n      loc: this.loc(start)\n    };\n  } // Implements the parsing rules in the Fragments section.\n\n  /**\n   * Corresponds to both FragmentSpread and InlineFragment in the spec.\n   *\n   * FragmentSpread : ... FragmentName Directives?\n   *\n   * InlineFragment : ... TypeCondition? Directives? SelectionSet\n   */\n  ;\n\n  _proto.parseFragment = function parseFragment() {\n    var start = this._lexer.token;\n    this.expectToken(TokenKind.SPREAD);\n    var hasTypeCondition = this.expectOptionalKeyword('on');\n\n    if (!hasTypeCondition && this.peek(TokenKind.NAME)) {\n      return {\n        kind: Kind.FRAGMENT_SPREAD,\n        name: this.parseFragmentName(),\n        directives: this.parseDirectives(false),\n        loc: this.loc(start)\n      };\n    }\n\n    return {\n      kind: Kind.INLINE_FRAGMENT,\n      typeCondition: hasTypeCondition ? this.parseNamedType() : undefined,\n      directives: this.parseDirectives(false),\n      selectionSet: this.parseSelectionSet(),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * FragmentDefinition :\n   *   - fragment FragmentName on TypeCondition Directives? SelectionSet\n   *\n   * TypeCondition : NamedType\n   */\n  ;\n\n  _proto.parseFragmentDefinition = function parseFragmentDefinition() {\n    var _this$_options;\n\n    var start = this._lexer.token;\n    this.expectKeyword('fragment'); // Experimental support for defining variables within fragments changes\n    // the grammar of FragmentDefinition:\n    //   - fragment FragmentName VariableDefinitions? on TypeCondition Directives? SelectionSet\n\n    if (((_this$_options = this._options) === null || _this$_options === void 0 ? void 0 : _this$_options.experimentalFragmentVariables) === true) {\n      return {\n        kind: Kind.FRAGMENT_DEFINITION,\n        name: this.parseFragmentName(),\n        variableDefinitions: this.parseVariableDefinitions(),\n        typeCondition: (this.expectKeyword('on'), this.parseNamedType()),\n        directives: this.parseDirectives(false),\n        selectionSet: this.parseSelectionSet(),\n        loc: this.loc(start)\n      };\n    }\n\n    return {\n      kind: Kind.FRAGMENT_DEFINITION,\n      name: this.parseFragmentName(),\n      typeCondition: (this.expectKeyword('on'), this.parseNamedType()),\n      directives: this.parseDirectives(false),\n      selectionSet: this.parseSelectionSet(),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * FragmentName : Name but not `on`\n   */\n  ;\n\n  _proto.parseFragmentName = function parseFragmentName() {\n    if (this._lexer.token.value === 'on') {\n      throw this.unexpected();\n    }\n\n    return this.parseName();\n  } // Implements the parsing rules in the Values section.\n\n  /**\n   * Value[Const] :\n   *   - [~Const] Variable\n   *   - IntValue\n   *   - FloatValue\n   *   - StringValue\n   *   - BooleanValue\n   *   - NullValue\n   *   - EnumValue\n   *   - ListValue[?Const]\n   *   - ObjectValue[?Const]\n   *\n   * BooleanValue : one of `true` `false`\n   *\n   * NullValue : `null`\n   *\n   * EnumValue : Name but not `true`, `false` or `null`\n   */\n  ;\n\n  _proto.parseValueLiteral = function parseValueLiteral(isConst) {\n    var token = this._lexer.token;\n\n    switch (token.kind) {\n      case TokenKind.BRACKET_L:\n        return this.parseList(isConst);\n\n      case TokenKind.BRACE_L:\n        return this.parseObject(isConst);\n\n      case TokenKind.INT:\n        this._lexer.advance();\n\n        return {\n          kind: Kind.INT,\n          value: token.value,\n          loc: this.loc(token)\n        };\n\n      case TokenKind.FLOAT:\n        this._lexer.advance();\n\n        return {\n          kind: Kind.FLOAT,\n          value: token.value,\n          loc: this.loc(token)\n        };\n\n      case TokenKind.STRING:\n      case TokenKind.BLOCK_STRING:\n        return this.parseStringLiteral();\n\n      case TokenKind.NAME:\n        this._lexer.advance();\n\n        switch (token.value) {\n          case 'true':\n            return {\n              kind: Kind.BOOLEAN,\n              value: true,\n              loc: this.loc(token)\n            };\n\n          case 'false':\n            return {\n              kind: Kind.BOOLEAN,\n              value: false,\n              loc: this.loc(token)\n            };\n\n          case 'null':\n            return {\n              kind: Kind.NULL,\n              loc: this.loc(token)\n            };\n\n          default:\n            return {\n              kind: Kind.ENUM,\n              value: token.value,\n              loc: this.loc(token)\n            };\n        }\n\n      case TokenKind.DOLLAR:\n        if (!isConst) {\n          return this.parseVariable();\n        }\n\n        break;\n    }\n\n    throw this.unexpected();\n  };\n\n  _proto.parseStringLiteral = function parseStringLiteral() {\n    var token = this._lexer.token;\n\n    this._lexer.advance();\n\n    return {\n      kind: Kind.STRING,\n      value: token.value,\n      block: token.kind === TokenKind.BLOCK_STRING,\n      loc: this.loc(token)\n    };\n  }\n  /**\n   * ListValue[Const] :\n   *   - [ ]\n   *   - [ Value[?Const]+ ]\n   */\n  ;\n\n  _proto.parseList = function parseList(isConst) {\n    var _this = this;\n\n    var start = this._lexer.token;\n\n    var item = function item() {\n      return _this.parseValueLiteral(isConst);\n    };\n\n    return {\n      kind: Kind.LIST,\n      values: this.any(TokenKind.BRACKET_L, item, TokenKind.BRACKET_R),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * ObjectValue[Const] :\n   *   - { }\n   *   - { ObjectField[?Const]+ }\n   */\n  ;\n\n  _proto.parseObject = function parseObject(isConst) {\n    var _this2 = this;\n\n    var start = this._lexer.token;\n\n    var item = function item() {\n      return _this2.parseObjectField(isConst);\n    };\n\n    return {\n      kind: Kind.OBJECT,\n      fields: this.any(TokenKind.BRACE_L, item, TokenKind.BRACE_R),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * ObjectField[Const] : Name : Value[?Const]\n   */\n  ;\n\n  _proto.parseObjectField = function parseObjectField(isConst) {\n    var start = this._lexer.token;\n    var name = this.parseName();\n    this.expectToken(TokenKind.COLON);\n    return {\n      kind: Kind.OBJECT_FIELD,\n      name: name,\n      value: this.parseValueLiteral(isConst),\n      loc: this.loc(start)\n    };\n  } // Implements the parsing rules in the Directives section.\n\n  /**\n   * Directives[Const] : Directive[?Const]+\n   */\n  ;\n\n  _proto.parseDirectives = function parseDirectives(isConst) {\n    var directives = [];\n\n    while (this.peek(TokenKind.AT)) {\n      directives.push(this.parseDirective(isConst));\n    }\n\n    return directives;\n  }\n  /**\n   * Directive[Const] : @ Name Arguments[?Const]?\n   */\n  ;\n\n  _proto.parseDirective = function parseDirective(isConst) {\n    var start = this._lexer.token;\n    this.expectToken(TokenKind.AT);\n    return {\n      kind: Kind.DIRECTIVE,\n      name: this.parseName(),\n      arguments: this.parseArguments(isConst),\n      loc: this.loc(start)\n    };\n  } // Implements the parsing rules in the Types section.\n\n  /**\n   * Type :\n   *   - NamedType\n   *   - ListType\n   *   - NonNullType\n   */\n  ;\n\n  _proto.parseTypeReference = function parseTypeReference() {\n    var start = this._lexer.token;\n    var type;\n\n    if (this.expectOptionalToken(TokenKind.BRACKET_L)) {\n      type = this.parseTypeReference();\n      this.expectToken(TokenKind.BRACKET_R);\n      type = {\n        kind: Kind.LIST_TYPE,\n        type: type,\n        loc: this.loc(start)\n      };\n    } else {\n      type = this.parseNamedType();\n    }\n\n    if (this.expectOptionalToken(TokenKind.BANG)) {\n      return {\n        kind: Kind.NON_NULL_TYPE,\n        type: type,\n        loc: this.loc(start)\n      };\n    }\n\n    return type;\n  }\n  /**\n   * NamedType : Name\n   */\n  ;\n\n  _proto.parseNamedType = function parseNamedType() {\n    var start = this._lexer.token;\n    return {\n      kind: Kind.NAMED_TYPE,\n      name: this.parseName(),\n      loc: this.loc(start)\n    };\n  } // Implements the parsing rules in the Type Definition section.\n\n  /**\n   * TypeSystemDefinition :\n   *   - SchemaDefinition\n   *   - TypeDefinition\n   *   - DirectiveDefinition\n   *\n   * TypeDefinition :\n   *   - ScalarTypeDefinition\n   *   - ObjectTypeDefinition\n   *   - InterfaceTypeDefinition\n   *   - UnionTypeDefinition\n   *   - EnumTypeDefinition\n   *   - InputObjectTypeDefinition\n   */\n  ;\n\n  _proto.parseTypeSystemDefinition = function parseTypeSystemDefinition() {\n    // Many definitions begin with a description and require a lookahead.\n    var keywordToken = this.peekDescription() ? this._lexer.lookahead() : this._lexer.token;\n\n    if (keywordToken.kind === TokenKind.NAME) {\n      switch (keywordToken.value) {\n        case 'schema':\n          return this.parseSchemaDefinition();\n\n        case 'scalar':\n          return this.parseScalarTypeDefinition();\n\n        case 'type':\n          return this.parseObjectTypeDefinition();\n\n        case 'interface':\n          return this.parseInterfaceTypeDefinition();\n\n        case 'union':\n          return this.parseUnionTypeDefinition();\n\n        case 'enum':\n          return this.parseEnumTypeDefinition();\n\n        case 'input':\n          return this.parseInputObjectTypeDefinition();\n\n        case 'directive':\n          return this.parseDirectiveDefinition();\n      }\n    }\n\n    throw this.unexpected(keywordToken);\n  };\n\n  _proto.peekDescription = function peekDescription() {\n    return this.peek(TokenKind.STRING) || this.peek(TokenKind.BLOCK_STRING);\n  }\n  /**\n   * Description : StringValue\n   */\n  ;\n\n  _proto.parseDescription = function parseDescription() {\n    if (this.peekDescription()) {\n      return this.parseStringLiteral();\n    }\n  }\n  /**\n   * SchemaDefinition : Description? schema Directives[Const]? { OperationTypeDefinition+ }\n   */\n  ;\n\n  _proto.parseSchemaDefinition = function parseSchemaDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    this.expectKeyword('schema');\n    var directives = this.parseDirectives(true);\n    var operationTypes = this.many(TokenKind.BRACE_L, this.parseOperationTypeDefinition, TokenKind.BRACE_R);\n    return {\n      kind: Kind.SCHEMA_DEFINITION,\n      description: description,\n      directives: directives,\n      operationTypes: operationTypes,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * OperationTypeDefinition : OperationType : NamedType\n   */\n  ;\n\n  _proto.parseOperationTypeDefinition = function parseOperationTypeDefinition() {\n    var start = this._lexer.token;\n    var operation = this.parseOperationType();\n    this.expectToken(TokenKind.COLON);\n    var type = this.parseNamedType();\n    return {\n      kind: Kind.OPERATION_TYPE_DEFINITION,\n      operation: operation,\n      type: type,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * ScalarTypeDefinition : Description? scalar Name Directives[Const]?\n   */\n  ;\n\n  _proto.parseScalarTypeDefinition = function parseScalarTypeDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    this.expectKeyword('scalar');\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n    return {\n      kind: Kind.SCALAR_TYPE_DEFINITION,\n      description: description,\n      name: name,\n      directives: directives,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * ObjectTypeDefinition :\n   *   Description?\n   *   type Name ImplementsInterfaces? Directives[Const]? FieldsDefinition?\n   */\n  ;\n\n  _proto.parseObjectTypeDefinition = function parseObjectTypeDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    this.expectKeyword('type');\n    var name = this.parseName();\n    var interfaces = this.parseImplementsInterfaces();\n    var directives = this.parseDirectives(true);\n    var fields = this.parseFieldsDefinition();\n    return {\n      kind: Kind.OBJECT_TYPE_DEFINITION,\n      description: description,\n      name: name,\n      interfaces: interfaces,\n      directives: directives,\n      fields: fields,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * ImplementsInterfaces :\n   *   - implements `&`? NamedType\n   *   - ImplementsInterfaces & NamedType\n   */\n  ;\n\n  _proto.parseImplementsInterfaces = function parseImplementsInterfaces() {\n    var _this$_options2;\n\n    if (!this.expectOptionalKeyword('implements')) {\n      return [];\n    }\n\n    if (((_this$_options2 = this._options) === null || _this$_options2 === void 0 ? void 0 : _this$_options2.allowLegacySDLImplementsInterfaces) === true) {\n      var types = []; // Optional leading ampersand\n\n      this.expectOptionalToken(TokenKind.AMP);\n\n      do {\n        types.push(this.parseNamedType());\n      } while (this.expectOptionalToken(TokenKind.AMP) || this.peek(TokenKind.NAME));\n\n      return types;\n    }\n\n    return this.delimitedMany(TokenKind.AMP, this.parseNamedType);\n  }\n  /**\n   * FieldsDefinition : { FieldDefinition+ }\n   */\n  ;\n\n  _proto.parseFieldsDefinition = function parseFieldsDefinition() {\n    var _this$_options3;\n\n    // Legacy support for the SDL?\n    if (((_this$_options3 = this._options) === null || _this$_options3 === void 0 ? void 0 : _this$_options3.allowLegacySDLEmptyFields) === true && this.peek(TokenKind.BRACE_L) && this._lexer.lookahead().kind === TokenKind.BRACE_R) {\n      this._lexer.advance();\n\n      this._lexer.advance();\n\n      return [];\n    }\n\n    return this.optionalMany(TokenKind.BRACE_L, this.parseFieldDefinition, TokenKind.BRACE_R);\n  }\n  /**\n   * FieldDefinition :\n   *   - Description? Name ArgumentsDefinition? : Type Directives[Const]?\n   */\n  ;\n\n  _proto.parseFieldDefinition = function parseFieldDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    var name = this.parseName();\n    var args = this.parseArgumentDefs();\n    this.expectToken(TokenKind.COLON);\n    var type = this.parseTypeReference();\n    var directives = this.parseDirectives(true);\n    return {\n      kind: Kind.FIELD_DEFINITION,\n      description: description,\n      name: name,\n      arguments: args,\n      type: type,\n      directives: directives,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * ArgumentsDefinition : ( InputValueDefinition+ )\n   */\n  ;\n\n  _proto.parseArgumentDefs = function parseArgumentDefs() {\n    return this.optionalMany(TokenKind.PAREN_L, this.parseInputValueDef, TokenKind.PAREN_R);\n  }\n  /**\n   * InputValueDefinition :\n   *   - Description? Name : Type DefaultValue? Directives[Const]?\n   */\n  ;\n\n  _proto.parseInputValueDef = function parseInputValueDef() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    var name = this.parseName();\n    this.expectToken(TokenKind.COLON);\n    var type = this.parseTypeReference();\n    var defaultValue;\n\n    if (this.expectOptionalToken(TokenKind.EQUALS)) {\n      defaultValue = this.parseValueLiteral(true);\n    }\n\n    var directives = this.parseDirectives(true);\n    return {\n      kind: Kind.INPUT_VALUE_DEFINITION,\n      description: description,\n      name: name,\n      type: type,\n      defaultValue: defaultValue,\n      directives: directives,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * InterfaceTypeDefinition :\n   *   - Description? interface Name Directives[Const]? FieldsDefinition?\n   */\n  ;\n\n  _proto.parseInterfaceTypeDefinition = function parseInterfaceTypeDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    this.expectKeyword('interface');\n    var name = this.parseName();\n    var interfaces = this.parseImplementsInterfaces();\n    var directives = this.parseDirectives(true);\n    var fields = this.parseFieldsDefinition();\n    return {\n      kind: Kind.INTERFACE_TYPE_DEFINITION,\n      description: description,\n      name: name,\n      interfaces: interfaces,\n      directives: directives,\n      fields: fields,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * UnionTypeDefinition :\n   *   - Description? union Name Directives[Const]? UnionMemberTypes?\n   */\n  ;\n\n  _proto.parseUnionTypeDefinition = function parseUnionTypeDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    this.expectKeyword('union');\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n    var types = this.parseUnionMemberTypes();\n    return {\n      kind: Kind.UNION_TYPE_DEFINITION,\n      description: description,\n      name: name,\n      directives: directives,\n      types: types,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * UnionMemberTypes :\n   *   - = `|`? NamedType\n   *   - UnionMemberTypes | NamedType\n   */\n  ;\n\n  _proto.parseUnionMemberTypes = function parseUnionMemberTypes() {\n    return this.expectOptionalToken(TokenKind.EQUALS) ? this.delimitedMany(TokenKind.PIPE, this.parseNamedType) : [];\n  }\n  /**\n   * EnumTypeDefinition :\n   *   - Description? enum Name Directives[Const]? EnumValuesDefinition?\n   */\n  ;\n\n  _proto.parseEnumTypeDefinition = function parseEnumTypeDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    this.expectKeyword('enum');\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n    var values = this.parseEnumValuesDefinition();\n    return {\n      kind: Kind.ENUM_TYPE_DEFINITION,\n      description: description,\n      name: name,\n      directives: directives,\n      values: values,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * EnumValuesDefinition : { EnumValueDefinition+ }\n   */\n  ;\n\n  _proto.parseEnumValuesDefinition = function parseEnumValuesDefinition() {\n    return this.optionalMany(TokenKind.BRACE_L, this.parseEnumValueDefinition, TokenKind.BRACE_R);\n  }\n  /**\n   * EnumValueDefinition : Description? EnumValue Directives[Const]?\n   *\n   * EnumValue : Name\n   */\n  ;\n\n  _proto.parseEnumValueDefinition = function parseEnumValueDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n    return {\n      kind: Kind.ENUM_VALUE_DEFINITION,\n      description: description,\n      name: name,\n      directives: directives,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * InputObjectTypeDefinition :\n   *   - Description? input Name Directives[Const]? InputFieldsDefinition?\n   */\n  ;\n\n  _proto.parseInputObjectTypeDefinition = function parseInputObjectTypeDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    this.expectKeyword('input');\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n    var fields = this.parseInputFieldsDefinition();\n    return {\n      kind: Kind.INPUT_OBJECT_TYPE_DEFINITION,\n      description: description,\n      name: name,\n      directives: directives,\n      fields: fields,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * InputFieldsDefinition : { InputValueDefinition+ }\n   */\n  ;\n\n  _proto.parseInputFieldsDefinition = function parseInputFieldsDefinition() {\n    return this.optionalMany(TokenKind.BRACE_L, this.parseInputValueDef, TokenKind.BRACE_R);\n  }\n  /**\n   * TypeSystemExtension :\n   *   - SchemaExtension\n   *   - TypeExtension\n   *\n   * TypeExtension :\n   *   - ScalarTypeExtension\n   *   - ObjectTypeExtension\n   *   - InterfaceTypeExtension\n   *   - UnionTypeExtension\n   *   - EnumTypeExtension\n   *   - InputObjectTypeDefinition\n   */\n  ;\n\n  _proto.parseTypeSystemExtension = function parseTypeSystemExtension() {\n    var keywordToken = this._lexer.lookahead();\n\n    if (keywordToken.kind === TokenKind.NAME) {\n      switch (keywordToken.value) {\n        case 'schema':\n          return this.parseSchemaExtension();\n\n        case 'scalar':\n          return this.parseScalarTypeExtension();\n\n        case 'type':\n          return this.parseObjectTypeExtension();\n\n        case 'interface':\n          return this.parseInterfaceTypeExtension();\n\n        case 'union':\n          return this.parseUnionTypeExtension();\n\n        case 'enum':\n          return this.parseEnumTypeExtension();\n\n        case 'input':\n          return this.parseInputObjectTypeExtension();\n      }\n    }\n\n    throw this.unexpected(keywordToken);\n  }\n  /**\n   * SchemaExtension :\n   *  - extend schema Directives[Const]? { OperationTypeDefinition+ }\n   *  - extend schema Directives[Const]\n   */\n  ;\n\n  _proto.parseSchemaExtension = function parseSchemaExtension() {\n    var start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('schema');\n    var directives = this.parseDirectives(true);\n    var operationTypes = this.optionalMany(TokenKind.BRACE_L, this.parseOperationTypeDefinition, TokenKind.BRACE_R);\n\n    if (directives.length === 0 && operationTypes.length === 0) {\n      throw this.unexpected();\n    }\n\n    return {\n      kind: Kind.SCHEMA_EXTENSION,\n      directives: directives,\n      operationTypes: operationTypes,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * ScalarTypeExtension :\n   *   - extend scalar Name Directives[Const]\n   */\n  ;\n\n  _proto.parseScalarTypeExtension = function parseScalarTypeExtension() {\n    var start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('scalar');\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n\n    if (directives.length === 0) {\n      throw this.unexpected();\n    }\n\n    return {\n      kind: Kind.SCALAR_TYPE_EXTENSION,\n      name: name,\n      directives: directives,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * ObjectTypeExtension :\n   *  - extend type Name ImplementsInterfaces? Directives[Const]? FieldsDefinition\n   *  - extend type Name ImplementsInterfaces? Directives[Const]\n   *  - extend type Name ImplementsInterfaces\n   */\n  ;\n\n  _proto.parseObjectTypeExtension = function parseObjectTypeExtension() {\n    var start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('type');\n    var name = this.parseName();\n    var interfaces = this.parseImplementsInterfaces();\n    var directives = this.parseDirectives(true);\n    var fields = this.parseFieldsDefinition();\n\n    if (interfaces.length === 0 && directives.length === 0 && fields.length === 0) {\n      throw this.unexpected();\n    }\n\n    return {\n      kind: Kind.OBJECT_TYPE_EXTENSION,\n      name: name,\n      interfaces: interfaces,\n      directives: directives,\n      fields: fields,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * InterfaceTypeExtension :\n   *  - extend interface Name ImplementsInterfaces? Directives[Const]? FieldsDefinition\n   *  - extend interface Name ImplementsInterfaces? Directives[Const]\n   *  - extend interface Name ImplementsInterfaces\n   */\n  ;\n\n  _proto.parseInterfaceTypeExtension = function parseInterfaceTypeExtension() {\n    var start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('interface');\n    var name = this.parseName();\n    var interfaces = this.parseImplementsInterfaces();\n    var directives = this.parseDirectives(true);\n    var fields = this.parseFieldsDefinition();\n\n    if (interfaces.length === 0 && directives.length === 0 && fields.length === 0) {\n      throw this.unexpected();\n    }\n\n    return {\n      kind: Kind.INTERFACE_TYPE_EXTENSION,\n      name: name,\n      interfaces: interfaces,\n      directives: directives,\n      fields: fields,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * UnionTypeExtension :\n   *   - extend union Name Directives[Const]? UnionMemberTypes\n   *   - extend union Name Directives[Const]\n   */\n  ;\n\n  _proto.parseUnionTypeExtension = function parseUnionTypeExtension() {\n    var start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('union');\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n    var types = this.parseUnionMemberTypes();\n\n    if (directives.length === 0 && types.length === 0) {\n      throw this.unexpected();\n    }\n\n    return {\n      kind: Kind.UNION_TYPE_EXTENSION,\n      name: name,\n      directives: directives,\n      types: types,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * EnumTypeExtension :\n   *   - extend enum Name Directives[Const]? EnumValuesDefinition\n   *   - extend enum Name Directives[Const]\n   */\n  ;\n\n  _proto.parseEnumTypeExtension = function parseEnumTypeExtension() {\n    var start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('enum');\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n    var values = this.parseEnumValuesDefinition();\n\n    if (directives.length === 0 && values.length === 0) {\n      throw this.unexpected();\n    }\n\n    return {\n      kind: Kind.ENUM_TYPE_EXTENSION,\n      name: name,\n      directives: directives,\n      values: values,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * InputObjectTypeExtension :\n   *   - extend input Name Directives[Const]? InputFieldsDefinition\n   *   - extend input Name Directives[Const]\n   */\n  ;\n\n  _proto.parseInputObjectTypeExtension = function parseInputObjectTypeExtension() {\n    var start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('input');\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n    var fields = this.parseInputFieldsDefinition();\n\n    if (directives.length === 0 && fields.length === 0) {\n      throw this.unexpected();\n    }\n\n    return {\n      kind: Kind.INPUT_OBJECT_TYPE_EXTENSION,\n      name: name,\n      directives: directives,\n      fields: fields,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * DirectiveDefinition :\n   *   - Description? directive @ Name ArgumentsDefinition? `repeatable`? on DirectiveLocations\n   */\n  ;\n\n  _proto.parseDirectiveDefinition = function parseDirectiveDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    this.expectKeyword('directive');\n    this.expectToken(TokenKind.AT);\n    var name = this.parseName();\n    var args = this.parseArgumentDefs();\n    var repeatable = this.expectOptionalKeyword('repeatable');\n    this.expectKeyword('on');\n    var locations = this.parseDirectiveLocations();\n    return {\n      kind: Kind.DIRECTIVE_DEFINITION,\n      description: description,\n      name: name,\n      arguments: args,\n      repeatable: repeatable,\n      locations: locations,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * DirectiveLocations :\n   *   - `|`? DirectiveLocation\n   *   - DirectiveLocations | DirectiveLocation\n   */\n  ;\n\n  _proto.parseDirectiveLocations = function parseDirectiveLocations() {\n    return this.delimitedMany(TokenKind.PIPE, this.parseDirectiveLocation);\n  }\n  /*\n   * DirectiveLocation :\n   *   - ExecutableDirectiveLocation\n   *   - TypeSystemDirectiveLocation\n   *\n   * ExecutableDirectiveLocation : one of\n   *   `QUERY`\n   *   `MUTATION`\n   *   `SUBSCRIPTION`\n   *   `FIELD`\n   *   `FRAGMENT_DEFINITION`\n   *   `FRAGMENT_SPREAD`\n   *   `INLINE_FRAGMENT`\n   *\n   * TypeSystemDirectiveLocation : one of\n   *   `SCHEMA`\n   *   `SCALAR`\n   *   `OBJECT`\n   *   `FIELD_DEFINITION`\n   *   `ARGUMENT_DEFINITION`\n   *   `INTERFACE`\n   *   `UNION`\n   *   `ENUM`\n   *   `ENUM_VALUE`\n   *   `INPUT_OBJECT`\n   *   `INPUT_FIELD_DEFINITION`\n   */\n  ;\n\n  _proto.parseDirectiveLocation = function parseDirectiveLocation() {\n    var start = this._lexer.token;\n    var name = this.parseName();\n\n    if (DirectiveLocation[name.value] !== undefined) {\n      return name;\n    }\n\n    throw this.unexpected(start);\n  } // Core parsing utility functions\n\n  /**\n   * Returns a location object, used to identify the place in the source that created a given parsed object.\n   */\n  ;\n\n  _proto.loc = function loc(startToken) {\n    var _this$_options4;\n\n    if (((_this$_options4 = this._options) === null || _this$_options4 === void 0 ? void 0 : _this$_options4.noLocation) !== true) {\n      return new Location(startToken, this._lexer.lastToken, this._lexer.source);\n    }\n  }\n  /**\n   * Determines if the next token is of a given kind\n   */\n  ;\n\n  _proto.peek = function peek(kind) {\n    return this._lexer.token.kind === kind;\n  }\n  /**\n   * If the next token is of the given kind, return that token after advancing the lexer.\n   * Otherwise, do not change the parser state and throw an error.\n   */\n  ;\n\n  _proto.expectToken = function expectToken(kind) {\n    var token = this._lexer.token;\n\n    if (token.kind === kind) {\n      this._lexer.advance();\n\n      return token;\n    }\n\n    throw syntaxError(this._lexer.source, token.start, \"Expected \".concat(getTokenKindDesc(kind), \", found \").concat(getTokenDesc(token), \".\"));\n  }\n  /**\n   * If the next token is of the given kind, return that token after advancing the lexer.\n   * Otherwise, do not change the parser state and return undefined.\n   */\n  ;\n\n  _proto.expectOptionalToken = function expectOptionalToken(kind) {\n    var token = this._lexer.token;\n\n    if (token.kind === kind) {\n      this._lexer.advance();\n\n      return token;\n    }\n\n    return undefined;\n  }\n  /**\n   * If the next token is a given keyword, advance the lexer.\n   * Otherwise, do not change the parser state and throw an error.\n   */\n  ;\n\n  _proto.expectKeyword = function expectKeyword(value) {\n    var token = this._lexer.token;\n\n    if (token.kind === TokenKind.NAME && token.value === value) {\n      this._lexer.advance();\n    } else {\n      throw syntaxError(this._lexer.source, token.start, \"Expected \\\"\".concat(value, \"\\\", found \").concat(getTokenDesc(token), \".\"));\n    }\n  }\n  /**\n   * If the next token is a given keyword, return \"true\" after advancing the lexer.\n   * Otherwise, do not change the parser state and return \"false\".\n   */\n  ;\n\n  _proto.expectOptionalKeyword = function expectOptionalKeyword(value) {\n    var token = this._lexer.token;\n\n    if (token.kind === TokenKind.NAME && token.value === value) {\n      this._lexer.advance();\n\n      return true;\n    }\n\n    return false;\n  }\n  /**\n   * Helper function for creating an error when an unexpected lexed token is encountered.\n   */\n  ;\n\n  _proto.unexpected = function unexpected(atToken) {\n    var token = atToken !== null && atToken !== void 0 ? atToken : this._lexer.token;\n    return syntaxError(this._lexer.source, token.start, \"Unexpected \".concat(getTokenDesc(token), \".\"));\n  }\n  /**\n   * Returns a possibly empty list of parse nodes, determined by the parseFn.\n   * This list begins with a lex token of openKind and ends with a lex token of closeKind.\n   * Advances the parser to the next lex token after the closing token.\n   */\n  ;\n\n  _proto.any = function any(openKind, parseFn, closeKind) {\n    this.expectToken(openKind);\n    var nodes = [];\n\n    while (!this.expectOptionalToken(closeKind)) {\n      nodes.push(parseFn.call(this));\n    }\n\n    return nodes;\n  }\n  /**\n   * Returns a list of parse nodes, determined by the parseFn.\n   * It can be empty only if open token is missing otherwise it will always return non-empty list\n   * that begins with a lex token of openKind and ends with a lex token of closeKind.\n   * Advances the parser to the next lex token after the closing token.\n   */\n  ;\n\n  _proto.optionalMany = function optionalMany(openKind, parseFn, closeKind) {\n    if (this.expectOptionalToken(openKind)) {\n      var nodes = [];\n\n      do {\n        nodes.push(parseFn.call(this));\n      } while (!this.expectOptionalToken(closeKind));\n\n      return nodes;\n    }\n\n    return [];\n  }\n  /**\n   * Returns a non-empty list of parse nodes, determined by the parseFn.\n   * This list begins with a lex token of openKind and ends with a lex token of closeKind.\n   * Advances the parser to the next lex token after the closing token.\n   */\n  ;\n\n  _proto.many = function many(openKind, parseFn, closeKind) {\n    this.expectToken(openKind);\n    var nodes = [];\n\n    do {\n      nodes.push(parseFn.call(this));\n    } while (!this.expectOptionalToken(closeKind));\n\n    return nodes;\n  }\n  /**\n   * Returns a non-empty list of parse nodes, determined by the parseFn.\n   * This list may begin with a lex token of delimiterKind followed by items separated by lex tokens of tokenKind.\n   * Advances the parser to the next lex token after last item in the list.\n   */\n  ;\n\n  _proto.delimitedMany = function delimitedMany(delimiterKind, parseFn) {\n    this.expectOptionalToken(delimiterKind);\n    var nodes = [];\n\n    do {\n      nodes.push(parseFn.call(this));\n    } while (this.expectOptionalToken(delimiterKind));\n\n    return nodes;\n  };\n\n  return Parser;\n}();\n/**\n * A helper function to describe a token as a string for debugging.\n */\n\nfunction getTokenDesc(token) {\n  var value = token.value;\n  return getTokenKindDesc(token.kind) + (value != null ? \" \\\"\".concat(value, \"\\\"\") : '');\n}\n/**\n * A helper function to describe a token kind as a string for debugging.\n */\n\n\nfunction getTokenKindDesc(kind) {\n  return isPunctuatorTokenKind(kind) ? \"\\\"\".concat(kind, \"\\\"\") : kind;\n}\n","import { __assign } from \"tslib\";\nimport { parse } from 'graphql';\nvar docCache = new Map();\nvar fragmentSourceMap = new Map();\nvar printFragmentWarnings = true;\nvar experimentalFragmentVariables = false;\nfunction normalize(string) {\n    return string.replace(/[\\s,]+/g, ' ').trim();\n}\nfunction cacheKeyFromLoc(loc) {\n    return normalize(loc.source.body.substring(loc.start, loc.end));\n}\nfunction processFragments(ast) {\n    var seenKeys = new Set();\n    var definitions = [];\n    ast.definitions.forEach(function (fragmentDefinition) {\n        if (fragmentDefinition.kind === 'FragmentDefinition') {\n            var fragmentName = fragmentDefinition.name.value;\n            var sourceKey = cacheKeyFromLoc(fragmentDefinition.loc);\n            var sourceKeySet = fragmentSourceMap.get(fragmentName);\n            if (sourceKeySet && !sourceKeySet.has(sourceKey)) {\n                if (printFragmentWarnings) {\n                    console.warn(\"Warning: fragment with name \" + fragmentName + \" already exists.\\n\"\n                        + \"graphql-tag enforces all fragment names across your application to be unique; read more about\\n\"\n                        + \"this in the docs: http://dev.apollodata.com/core/fragments.html#unique-names\");\n                }\n            }\n            else if (!sourceKeySet) {\n                fragmentSourceMap.set(fragmentName, sourceKeySet = new Set);\n            }\n            sourceKeySet.add(sourceKey);\n            if (!seenKeys.has(sourceKey)) {\n                seenKeys.add(sourceKey);\n                definitions.push(fragmentDefinition);\n            }\n        }\n        else {\n            definitions.push(fragmentDefinition);\n        }\n    });\n    return __assign(__assign({}, ast), { definitions: definitions });\n}\nfunction stripLoc(doc) {\n    var workSet = new Set(doc.definitions);\n    workSet.forEach(function (node) {\n        if (node.loc)\n            delete node.loc;\n        Object.keys(node).forEach(function (key) {\n            var value = node[key];\n            if (value && typeof value === 'object') {\n                workSet.add(value);\n            }\n        });\n    });\n    var loc = doc.loc;\n    if (loc) {\n        delete loc.startToken;\n        delete loc.endToken;\n    }\n    return doc;\n}\nfunction parseDocument(source) {\n    var cacheKey = normalize(source);\n    if (!docCache.has(cacheKey)) {\n        var parsed = parse(source, {\n            experimentalFragmentVariables: experimentalFragmentVariables\n        });\n        if (!parsed || parsed.kind !== 'Document') {\n            throw new Error('Not a valid GraphQL document.');\n        }\n        docCache.set(cacheKey, stripLoc(processFragments(parsed)));\n    }\n    return docCache.get(cacheKey);\n}\nexport function gql(literals) {\n    var args = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        args[_i - 1] = arguments[_i];\n    }\n    if (typeof literals === 'string') {\n        literals = [literals];\n    }\n    var result = literals[0];\n    args.forEach(function (arg, i) {\n        if (arg && arg.kind === 'Document') {\n            result += arg.loc.source.body;\n        }\n        else {\n            result += arg;\n        }\n        result += literals[i + 1];\n    });\n    return parseDocument(result);\n}\nexport function resetCaches() {\n    docCache.clear();\n    fragmentSourceMap.clear();\n}\nexport function disableFragmentWarnings() {\n    printFragmentWarnings = false;\n}\nexport function enableExperimentalFragmentVariables() {\n    experimentalFragmentVariables = true;\n}\nexport function disableExperimentalFragmentVariables() {\n    experimentalFragmentVariables = false;\n}\nvar extras = {\n    gql: gql,\n    resetCaches: resetCaches,\n    disableFragmentWarnings: disableFragmentWarnings,\n    enableExperimentalFragmentVariables: enableExperimentalFragmentVariables,\n    disableExperimentalFragmentVariables: disableExperimentalFragmentVariables\n};\n(function (gql_1) {\n    gql_1.gql = extras.gql, gql_1.resetCaches = extras.resetCaches, gql_1.disableFragmentWarnings = extras.disableFragmentWarnings, gql_1.enableExperimentalFragmentVariables = extras.enableExperimentalFragmentVariables, gql_1.disableExperimentalFragmentVariables = extras.disableExperimentalFragmentVariables;\n})(gql || (gql = {}));\ngql[\"default\"] = gql;\nexport default gql;\n//# sourceMappingURL=index.js.map","import { invariant } from '../../utilities/globals';\n\nimport {\n  DocumentNode,\n  DefinitionNode,\n  VariableDefinitionNode,\n  OperationDefinitionNode\n} from 'graphql';\n\nexport enum DocumentType {\n  Query,\n  Mutation,\n  Subscription\n}\n\nexport interface IDocumentDefinition {\n  type: DocumentType;\n  name: string;\n  variables: ReadonlyArray<VariableDefinitionNode>;\n}\n\nconst cache = new Map();\n\nexport function operationName(type: DocumentType) {\n  let name;\n  switch (type) {\n    case DocumentType.Query:\n      name = 'Query';\n      break;\n    case DocumentType.Mutation:\n      name = 'Mutation';\n      break;\n    case DocumentType.Subscription:\n      name = 'Subscription';\n      break;\n  }\n  return name;\n}\n\n// This parser is mostly used to saftey check incoming documents.\nexport function parser(document: DocumentNode): IDocumentDefinition {\n  const cached = cache.get(document);\n  if (cached) return cached;\n\n  let variables, type, name;\n\n  invariant(\n    !!document && !!document.kind,\n    `Argument of ${document} passed to parser was not a valid GraphQL ` +\n      `DocumentNode. You may need to use 'graphql-tag' or another method ` +\n      `to convert your operation into a document`\n  );\n\n  const fragments = document.definitions.filter(\n    (x: DefinitionNode) => x.kind === 'FragmentDefinition'\n  );\n\n  const queries = document.definitions.filter(\n    (x: DefinitionNode) =>\n      x.kind === 'OperationDefinition' && x.operation === 'query'\n  );\n\n  const mutations = document.definitions.filter(\n    (x: DefinitionNode) =>\n      x.kind === 'OperationDefinition' && x.operation === 'mutation'\n  );\n\n  const subscriptions = document.definitions.filter(\n    (x: DefinitionNode) =>\n      x.kind === 'OperationDefinition' && x.operation === 'subscription'\n  );\n\n  invariant(\n    !fragments.length ||\n      (queries.length || mutations.length || subscriptions.length),\n    `Passing only a fragment to 'graphql' is not yet supported. ` +\n      `You must include a query, subscription or mutation as well`\n  );\n\n  invariant(\n    queries.length + mutations.length + subscriptions.length <= 1,\n    `react-apollo only supports a query, subscription, or a mutation per HOC. ` +\n      `${document} had ${queries.length} queries, ${subscriptions.length} ` +\n      `subscriptions and ${mutations.length} mutations. ` +\n      `You can use 'compose' to join multiple operation types to a component`\n  );\n\n  type = queries.length ? DocumentType.Query : DocumentType.Mutation;\n  if (!queries.length && !mutations.length) type = DocumentType.Subscription;\n\n  const definitions = queries.length\n    ? queries\n    : mutations.length\n    ? mutations\n    : subscriptions;\n\n  invariant(\n    definitions.length === 1,\n    `react-apollo only supports one definition per HOC. ${document} had ` +\n      `${definitions.length} definitions. ` +\n      `You can use 'compose' to join multiple operation types to a component`\n  );\n\n  const definition = definitions[0] as OperationDefinitionNode;\n  variables = definition.variableDefinitions || [];\n\n  if (definition.name && definition.name.kind === 'Name') {\n    name = definition.name.value;\n  } else {\n    name = 'data'; // fallback to using data if no name\n  }\n\n  const payload = { name, type, variables };\n  cache.set(document, payload);\n  return payload;\n}\n","import { invariant } from '../../utilities/globals';\n\nimport { DocumentNode } from 'graphql';\nimport { equal } from '@wry/equality';\n\nimport { ApolloClient } from '../../core';\nimport { DocumentType, parser, operationName } from '../parser';\nimport { CommonOptions } from '../types/types';\n\nexport abstract class OperationData<TOptions = any> {\n  public isMounted: boolean = false;\n  public previousOptions: CommonOptions<TOptions> = {} as CommonOptions<\n    TOptions\n  >;\n  public context: any = {};\n  public client: ApolloClient<object>;\n\n  private options: CommonOptions<TOptions> = {} as CommonOptions<TOptions>;\n\n  constructor(options?: CommonOptions<TOptions>, context?: any) {\n    this.options = options || ({} as CommonOptions<TOptions>);\n    this.context = context || {};\n  }\n\n  public getOptions(): CommonOptions<TOptions> {\n    return this.options;\n  }\n\n  public setOptions(\n    newOptions: CommonOptions<TOptions>,\n    storePrevious: boolean = false\n  ) {\n    if (storePrevious && !equal(this.options, newOptions)) {\n      this.previousOptions = this.options;\n    }\n    this.options = newOptions;\n  }\n\n  public abstract execute(...args: any): any;\n  public abstract afterExecute(...args: any): void | (() => void);\n  public abstract cleanup(): void;\n\n  protected unmount() {\n    this.isMounted = false;\n  }\n\n  protected refreshClient() {\n    const client =\n      (this.options && this.options.client) ||\n      (this.context && this.context.client);\n\n    invariant(\n      !!client,\n      'Could not find \"client\" in the context or passed in as an option. ' +\n        'Wrap the root component in an <ApolloProvider>, or pass an ' +\n        'ApolloClient instance in via options.'\n    );\n\n    let isNew = false;\n    if (client !== this.client) {\n      isNew = true;\n      this.client = client;\n      this.cleanup();\n    }\n    return {\n      client: this.client as ApolloClient<object>,\n      isNew\n    };\n  }\n\n  protected verifyDocumentType(document: DocumentNode, type: DocumentType) {\n    const operation = parser(document);\n    const requiredOperationName = operationName(type);\n    const usedOperationName = operationName(operation.type);\n    invariant(\n      operation.type === type,\n      `Running a ${requiredOperationName} requires a graphql ` +\n        `${requiredOperationName}, but a ${usedOperationName} was used instead.`\n    );\n  }\n}\n","import { equal } from '@wry/equality';\n\nimport { ApolloError } from '../../errors';\n\nimport {\n  ApolloClient,\n  NetworkStatus,\n  FetchMoreQueryOptions,\n  SubscribeToMoreOptions,\n  ObservableQuery,\n  FetchMoreOptions,\n  UpdateQueryOptions,\n  DocumentNode,\n  TypedDocumentNode,\n} from '../../core';\n\nimport {\n  ObservableSubscription\n} from '../../utilities';\n\nimport { DocumentType } from '../parser';\nimport {\n  QueryResult,\n  QueryDataOptions,\n  QueryTuple,\n  QueryLazyOptions,\n  ObservableQueryFields,\n} from '../types/types';\nimport { OperationData } from './OperationData';\n\ntype ObservableQueryOptions<TData, TVars> =\n  ReturnType<QueryData<TData, TVars>[\"prepareObservableQueryOptions\"]>;\n\nexport class QueryData<TData, TVariables> extends OperationData<\n  QueryDataOptions<TData, TVariables>\n> {\n  public onNewData: () => void;\n  public currentObservable?: ObservableQuery<TData, TVariables>;\n  private currentSubscription?: ObservableSubscription;\n  private runLazy: boolean = false;\n  private lazyOptions?: QueryLazyOptions<TVariables>;\n  private previous: {\n    client?: ApolloClient<object>;\n    query?: DocumentNode | TypedDocumentNode<TData, TVariables>;\n    observableQueryOptions?: ObservableQueryOptions<TData, TVariables>;\n    result?: QueryResult<TData, TVariables>;\n    loading?: boolean;\n    options?: QueryDataOptions<TData, TVariables>;\n    error?: ApolloError;\n  } = Object.create(null);\n\n  constructor({\n    options,\n    context,\n    onNewData\n  }: {\n    options: QueryDataOptions<TData, TVariables>;\n    context: any;\n    onNewData: () => void;\n  }) {\n    super(options, context);\n    this.onNewData = onNewData;\n  }\n\n  public execute(): QueryResult<TData, TVariables> {\n    this.refreshClient();\n\n    const { skip, query } = this.getOptions();\n    if (skip || query !== this.previous.query) {\n      this.removeQuerySubscription();\n      this.removeObservable(!skip);\n      this.previous.query = query;\n    }\n\n    this.updateObservableQuery();\n\n    return this.getExecuteSsrResult() || this.getExecuteResult();\n  }\n\n  public executeLazy(): QueryTuple<TData, TVariables> {\n    return !this.runLazy\n      ? [\n          this.runLazyQuery,\n          {\n            loading: false,\n            networkStatus: NetworkStatus.ready,\n            called: false,\n            data: undefined\n          }\n        ]\n      : [this.runLazyQuery, this.execute()];\n  }\n\n  // For server-side rendering\n  public fetchData(): Promise<void> | boolean {\n    const options = this.getOptions();\n    if (options.skip || options.ssr === false) return false;\n    return new Promise(resolve => this.startQuerySubscription(resolve));\n  }\n\n  public afterExecute({ lazy = false }: { lazy?: boolean } = {}) {\n    this.isMounted = true;\n    const options = this.getOptions();\n    if (this.currentObservable && !this.ssrInitiated()) {\n      this.startQuerySubscription();\n    }\n\n    if (!lazy || this.runLazy) {\n      this.handleErrorOrCompleted();\n    }\n\n    this.previousOptions = options;\n    return this.unmount.bind(this);\n  }\n\n  public cleanup() {\n    this.removeQuerySubscription();\n    this.removeObservable(true);\n    delete this.previous.result;\n  }\n\n  public getOptions() {\n    const options = super.getOptions();\n\n    if (this.lazyOptions) {\n      options.variables = {\n        ...options.variables,\n        ...this.lazyOptions.variables\n      } as TVariables;\n      options.context = {\n        ...options.context,\n        ...this.lazyOptions.context\n      };\n    }\n\n    // skip is not supported when using lazy query execution.\n    if (this.runLazy) {\n      delete options.skip;\n    }\n\n    return options;\n  }\n\n  public ssrInitiated() {\n    return this.context && this.context.renderPromises;\n  }\n\n  private runLazyQuery = (options?: QueryLazyOptions<TVariables>) => {\n    this.cleanup();\n    this.runLazy = true;\n    this.lazyOptions = options;\n    this.onNewData();\n  };\n\n  private getExecuteSsrResult() {\n    const { ssr, skip } = this.getOptions();\n    const ssrDisabled = ssr === false;\n    const fetchDisabled = this.refreshClient().client.disableNetworkFetches;\n\n    const ssrLoading = {\n      loading: true,\n      networkStatus: NetworkStatus.loading,\n      called: true,\n      data: undefined,\n      stale: false,\n      client: this.client,\n      ...this.observableQueryFields(),\n    } as QueryResult<TData, TVariables>;\n\n    // If SSR has been explicitly disabled, and this function has been called\n    // on the server side, return the default loading state.\n    if (ssrDisabled && (this.ssrInitiated() || fetchDisabled)) {\n      this.previous.result = ssrLoading;\n      return ssrLoading;\n    }\n\n    if (this.ssrInitiated()) {\n      const result = this.getExecuteResult() || ssrLoading;\n      if (result.loading && !skip) {\n        this.context.renderPromises!.addQueryPromise(this, () => null);\n      }\n      return result;\n    }\n  }\n\n  private prepareObservableQueryOptions() {\n    const options = this.getOptions();\n    this.verifyDocumentType(options.query, DocumentType.Query);\n    const displayName = options.displayName || 'Query';\n\n    // Set the fetchPolicy to cache-first for network-only and cache-and-network\n    // fetches for server side renders.\n    if (\n      this.ssrInitiated() &&\n      (options.fetchPolicy === 'network-only' ||\n        options.fetchPolicy === 'cache-and-network')\n    ) {\n      options.fetchPolicy = 'cache-first';\n    }\n\n    return {\n      ...options,\n      displayName,\n      context: options.context,\n    };\n  }\n\n  private initializeObservableQuery() {\n    // See if there is an existing observable that was used to fetch the same\n    // data and if so, use it instead since it will contain the proper queryId\n    // to fetch the result set. This is used during SSR.\n    if (this.ssrInitiated()) {\n      this.currentObservable = this.context!.renderPromises!.getSSRObservable(\n        this.getOptions()\n      );\n    }\n\n    if (!this.currentObservable) {\n      const observableQueryOptions = this.prepareObservableQueryOptions();\n\n      this.previous.observableQueryOptions = {\n        ...observableQueryOptions,\n        children: void 0,\n      };\n      this.currentObservable = this.refreshClient().client.watchQuery({\n        ...observableQueryOptions\n      });\n\n      if (this.ssrInitiated()) {\n        this.context!.renderPromises!.registerSSRObservable(\n          this.currentObservable,\n          observableQueryOptions\n        );\n      }\n    }\n  }\n\n  private updateObservableQuery() {\n    // If we skipped initially, we may not have yet created the observable\n    if (!this.currentObservable) {\n      this.initializeObservableQuery();\n      return;\n    }\n\n    const newObservableQueryOptions = {\n      ...this.prepareObservableQueryOptions(),\n      children: void 0,\n    };\n\n    if (this.getOptions().skip) {\n      this.previous.observableQueryOptions = newObservableQueryOptions;\n      return;\n    }\n\n    if (\n      !equal(newObservableQueryOptions, this.previous.observableQueryOptions)\n    ) {\n      this.previous.observableQueryOptions = newObservableQueryOptions;\n      this.currentObservable\n        .setOptions(newObservableQueryOptions)\n        // The error will be passed to the child container, so we don't\n        // need to log it here. We could conceivably log something if\n        // an option was set. OTOH we don't log errors w/ the original\n        // query. See https://github.com/apollostack/react-apollo/issues/404\n        .catch(() => {});\n    }\n  }\n\n  // Setup a subscription to watch for Apollo Client `ObservableQuery` changes.\n  // When new data is received, and it doesn't match the data that was used\n  // during the last `QueryData.execute` call (and ultimately the last query\n  // component render), trigger the `onNewData` callback. If not specified,\n  // `onNewData` will fallback to the default `QueryData.onNewData` function\n  // (which usually leads to a query component re-render).\n  private startQuerySubscription(onNewData: () => void = this.onNewData) {\n    if (this.currentSubscription || this.getOptions().skip) return;\n\n    this.currentSubscription = this.currentObservable!.subscribe({\n      next: ({ loading, networkStatus, data }) => {\n        const previousResult = this.previous.result;\n\n        // Make sure we're not attempting to re-render similar results\n        if (\n          previousResult &&\n          previousResult.loading === loading &&\n          previousResult.networkStatus === networkStatus &&\n          equal(previousResult.data, data)\n        ) {\n          return;\n        }\n\n        onNewData();\n      },\n      error: error => {\n        this.resubscribeToQuery();\n        if (!error.hasOwnProperty('graphQLErrors')) throw error;\n\n        const previousResult = this.previous.result;\n        if (\n          (previousResult && previousResult.loading) ||\n          !equal(error, this.previous.error)\n        ) {\n          this.previous.error = error;\n          onNewData();\n        }\n      }\n    });\n  }\n\n  private resubscribeToQuery() {\n    this.removeQuerySubscription();\n\n    // Unfortunately, if `lastError` is set in the current\n    // `observableQuery` when the subscription is re-created,\n    // the subscription will immediately receive the error, which will\n    // cause it to terminate again. To avoid this, we first clear\n    // the last error/result from the `observableQuery` before re-starting\n    // the subscription, and restore it afterwards (so the subscription\n    // has a chance to stay open).\n    const { currentObservable } = this;\n    if (currentObservable) {\n      const last = currentObservable[\"last\"];\n      try {\n        currentObservable.resetLastResults();\n        this.startQuerySubscription();\n      } finally {\n        currentObservable[\"last\"] = last;\n      }\n    }\n  }\n\n  private getExecuteResult(): QueryResult<TData, TVariables> {\n    let result = this.observableQueryFields() as QueryResult<TData, TVariables>;\n    const options = this.getOptions();\n\n    // When skipping a query (ie. we're not querying for data but still want\n    // to render children), make sure the `data` is cleared out and\n    // `loading` is set to `false` (since we aren't loading anything).\n    //\n    // NOTE: We no longer think this is the correct behavior. Skipping should\n    // not automatically set `data` to `undefined`, but instead leave the\n    // previous data in place. In other words, skipping should not mandate\n    // that previously received data is all of a sudden removed. Unfortunately,\n    // changing this is breaking, so we'll have to wait until Apollo Client\n    // 4.0 to address this.\n    if (options.skip) {\n      result = {\n        ...result,\n        data: undefined,\n        error: undefined,\n        loading: false,\n        networkStatus: NetworkStatus.ready,\n        called: true,\n      };\n    } else if (this.currentObservable) {\n      // Fetch the current result (if any) from the store.\n      const currentResult = this.currentObservable.getCurrentResult();\n      const { data, loading, partial, networkStatus, errors } = currentResult;\n      let { error } = currentResult;\n\n      // Until a set naming convention for networkError and graphQLErrors is\n      // decided upon, we map errors (graphQLErrors) to the error options.\n      if (errors && errors.length > 0) {\n        error = new ApolloError({ graphQLErrors: errors });\n      }\n\n      result = {\n        ...result,\n        data,\n        loading,\n        networkStatus,\n        error,\n        called: true\n      };\n\n      if (loading) {\n        // Fall through without modifying result...\n      } else if (error) {\n        Object.assign(result, {\n          data: (this.currentObservable.getLastResult() || ({} as any))\n            .data\n        });\n      } else {\n        const { fetchPolicy } = this.currentObservable.options;\n        const { partialRefetch } = options;\n        if (\n          partialRefetch &&\n          partial &&\n          (!data || Object.keys(data).length === 0) &&\n          fetchPolicy !== 'cache-only'\n        ) {\n          // When a `Query` component is mounted, and a mutation is executed\n          // that returns the same ID as the mounted `Query`, but has less\n          // fields in its result, Apollo Client's `QueryManager` returns the\n          // data as `undefined` since a hit can't be found in the cache.\n          // This can lead to application errors when the UI elements rendered by\n          // the original `Query` component are expecting certain data values to\n          // exist, and they're all of a sudden stripped away. To help avoid\n          // this we'll attempt to refetch the `Query` data.\n          Object.assign(result, {\n            loading: true,\n            networkStatus: NetworkStatus.loading\n          });\n          result.refetch();\n          return result;\n        }\n      }\n    }\n\n    result.client = this.client;\n    // Store options as this.previousOptions.\n    this.setOptions(options, true);\n\n    const previousResult = this.previous.result;\n\n    this.previous.loading =\n      previousResult && previousResult.loading || false;\n\n    // Ensure the returned result contains previousData as a separate\n    // property, to give developers the flexibility of leveraging outdated\n    // data while new data is loading from the network. Falling back to\n    // previousResult.previousData when previousResult.data is falsy here\n    // allows result.previousData to persist across multiple results.\n    result.previousData = previousResult &&\n      (previousResult.data || previousResult.previousData);\n\n    this.previous.result = result;\n\n    // Any query errors that exist are now available in `result`, so we'll\n    // remove the original errors from the `ObservableQuery` query store to\n    // make sure they aren't re-displayed on subsequent (potentially error\n    // free) requests/responses.\n    this.currentObservable && this.currentObservable.resetQueryStoreErrors();\n\n    return result;\n  }\n\n  private handleErrorOrCompleted() {\n    if (!this.currentObservable || !this.previous.result) return;\n\n    const { data, loading, error } = this.previous.result;\n\n    if (!loading) {\n      const {\n        query,\n        variables,\n        onCompleted,\n        onError,\n        skip\n      } = this.getOptions();\n\n      // No changes, so we won't call onError/onCompleted.\n      if (\n        this.previousOptions &&\n        !this.previous.loading &&\n        equal(this.previousOptions.query, query) &&\n        equal(this.previousOptions.variables, variables)\n      ) {\n        return;\n      }\n\n      if (onCompleted && !error && !skip) {\n        onCompleted(data as TData);\n      } else if (onError && error) {\n        onError(error);\n      }\n    }\n  }\n\n  private removeQuerySubscription() {\n    if (this.currentSubscription) {\n      this.currentSubscription.unsubscribe();\n      delete this.currentSubscription;\n    }\n  }\n\n  private removeObservable(andDelete: boolean) {\n    if (this.currentObservable) {\n      this.currentObservable[\"tearDownQuery\"]();\n      if (andDelete) {\n        delete this.currentObservable;\n      }\n    }\n  }\n\n  private obsRefetch = (variables?: Partial<TVariables>) =>\n    this.currentObservable?.refetch(variables);\n\n  private obsFetchMore = (\n    fetchMoreOptions: FetchMoreQueryOptions<TVariables, TData> &\n      FetchMoreOptions<TData, TVariables>\n  ) => this.currentObservable?.fetchMore(fetchMoreOptions);\n\n  private obsUpdateQuery = <TVars = TVariables>(\n    mapFn: (\n      previousQueryResult: TData,\n      options: UpdateQueryOptions<TVars>\n    ) => TData\n  ) => this.currentObservable?.updateQuery(mapFn);\n\n  private obsStartPolling = (pollInterval: number) => {\n    this.currentObservable?.startPolling(pollInterval);\n  };\n\n  private obsStopPolling = () => {\n    this.currentObservable?.stopPolling();\n  };\n\n  private obsSubscribeToMore = <\n    TSubscriptionData = TData,\n    TSubscriptionVariables = TVariables\n  >(\n    options: SubscribeToMoreOptions<\n      TData,\n      TSubscriptionVariables,\n      TSubscriptionData\n    >\n  ) => this.currentObservable?.subscribeToMore(options);\n\n  private observableQueryFields() {\n    return {\n      variables: this.currentObservable?.variables,\n      refetch: this.obsRefetch,\n      fetchMore: this.obsFetchMore,\n      updateQuery: this.obsUpdateQuery,\n      startPolling: this.obsStartPolling,\n      stopPolling: this.obsStopPolling,\n      subscribeToMore: this.obsSubscribeToMore\n    } as ObservableQueryFields<TData, TVariables>;\n  }\n}\n","import '../../../utilities/globals';\n\nimport { useContext, useEffect, useReducer, useRef } from 'react';\nimport { DocumentNode } from 'graphql';\nimport { TypedDocumentNode } from '@graphql-typed-document-node/core';\n\nimport {\n  QueryHookOptions,\n  QueryDataOptions,\n  QueryTuple,\n  QueryResult,\n} from '../../types/types';\nimport { QueryData } from '../../data';\nimport { useDeepMemo } from './useDeepMemo';\nimport { OperationVariables } from '../../../core';\nimport { getApolloContext } from '../../context';\nimport { useAfterFastRefresh } from './useAfterFastRefresh';\n\nexport function useBaseQuery<TData = any, TVariables = OperationVariables>(\n  query: DocumentNode | TypedDocumentNode<TData, TVariables>,\n  options?: QueryHookOptions<TData, TVariables>,\n  lazy = false\n) {\n  const context = useContext(getApolloContext());\n  const [tick, forceUpdate] = useReducer(x => x + 1, 0);\n  const updatedOptions = options ? { ...options, query } : { query };\n\n  const queryDataRef = useRef<QueryData<TData, TVariables>>();\n  const queryData = queryDataRef.current || (\n    queryDataRef.current = new QueryData<TData, TVariables>({\n      options: updatedOptions as QueryDataOptions<TData, TVariables>,\n      context,\n      onNewData() {\n        if (!queryData.ssrInitiated()) {\n          // When new data is received from the `QueryData` object, we want to\n          // force a re-render to make sure the new data is displayed. We can't\n          // force that re-render if we're already rendering however so to be\n          // safe we'll trigger the re-render in a microtask. In case the\n          // component gets unmounted before this callback fires, we re-check\n          // queryDataRef.current.isMounted before calling forceUpdate().\n          Promise.resolve().then(() => queryDataRef.current && queryDataRef.current.isMounted && forceUpdate());\n        } else {\n          // If we're rendering on the server side we can force an update at\n          // any point.\n          forceUpdate();\n        }\n      }\n    })\n  );\n\n  queryData.setOptions(updatedOptions);\n  queryData.context = context;\n\n  // `onError` and `onCompleted` callback functions will not always have a\n  // stable identity, so we'll exclude them from the memoization key to\n  // prevent `afterExecute` from being triggered un-necessarily.\n  const memo = {\n    options: {\n      ...updatedOptions,\n      onError: void 0,\n      onCompleted: void 0\n    } as QueryHookOptions<TData, TVariables>,\n    context,\n    tick\n  };\n\n  const result = useDeepMemo(\n    () => (lazy ? queryData.executeLazy() : queryData.execute()),\n    memo\n  );\n\n  const queryResult = lazy\n    ? (result as QueryTuple<TData, TVariables>)[1]\n    : (result as QueryResult<TData, TVariables>);\n\n  if (__DEV__) {\n    // ensure we run an update after refreshing so that we reinitialize\n    useAfterFastRefresh(forceUpdate);\n  }\n\n  useEffect(() => {\n    return () => {\n      queryData.cleanup();\n      // this effect can run multiple times during a fast-refresh\n      // so make sure we clean up the ref\n      queryDataRef.current = void 0;\n    }\n  }, []);\n\n  useEffect(() => queryData.afterExecute({ lazy }), [\n    queryResult.loading,\n    queryResult.networkStatus,\n    queryResult.error,\n    queryResult.data,\n    queryData.currentObservable,\n  ]);\n\n  return result;\n}\n","import { useRef } from 'react';\nimport { equal } from '@wry/equality';\n\n/**\n * Memoize a result using deep equality. This hook has two advantages over\n * React.useMemo: it uses deep equality to compare memo keys, and it guarantees\n * that the memo function will only be called if the keys are unequal.\n * React.useMemo cannot be relied on to do this, since it is only a performance\n * optimization (see https://reactjs.org/docs/hooks-reference.html#usememo).\n */\nexport function useDeepMemo<TKey, TValue>(\n  memoFn: () => TValue,\n  key: TKey\n): TValue {\n  const ref = useRef<{ key: TKey; value: TValue }>();\n\n  if (!ref.current || !equal(key, ref.current.key)) {\n    ref.current = { key, value: memoFn() };\n  }\n\n  return ref.current.value;\n}\n","import '../../../utilities/globals';\nimport { useEffect, useRef } from \"react\";\n\n/**\n * This hook allows running a function only immediately after a react\n * fast refresh or live reload.\n *\n * Useful in order to ensure that we can reinitialize things that have been\n * disposed by cleanup functions in `useEffect`.\n * @param effectFn a function to run immediately after a fast refresh\n */\nexport function useAfterFastRefresh(effectFn: () => unknown) {\n  if (__DEV__) {\n    const didRefresh = useRef(false);\n    useEffect(() => {\n      return () => {\n        // Detect fast refresh, only runs multiple times in fast refresh\n        didRefresh.current = true;\n      };\n    }, []);\n\n    useEffect(() => {\n      if (didRefresh.current === true) {\n        // This block only runs after a fast refresh\n        didRefresh.current = false;\n        effectFn();\n      }\n    }, [])\n  }\n}\n","import { DocumentNode } from 'graphql';\nimport { TypedDocumentNode } from '@graphql-typed-document-node/core';\n\nimport { QueryHookOptions, QueryResult } from '../types/types';\nimport { useBaseQuery } from './utils/useBaseQuery';\nimport { OperationVariables } from '../../core';\n\nexport function useQuery<TData = any, TVariables = OperationVariables>(\n  query: DocumentNode | TypedDocumentNode<TData, TVariables>,\n  options?: QueryHookOptions<TData, TVariables>\n) {\n  return useBaseQuery<TData, TVariables>(query, options, false) as QueryResult<\n    TData,\n    TVariables\n  >;\n}\n"],"sourceRoot":""}